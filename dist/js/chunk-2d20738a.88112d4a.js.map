{"version":3,"sources":["webpack:///./src/views/Lahan/components/DetailLahanMap.vue?a7a8","webpack:///src/views/Lahan/components/DetailLahanMap.vue","webpack:///./src/views/Lahan/components/DetailLahanMap.vue?f92c","webpack:///./src/views/Lahan/components/DetailLahanMap.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","staticStyle","maps","loading","attrs","_s","text","_e","key","section","ref","staticRenderFns","mapboxgl","accessToken","mapOptions","color","center","markerCoordinates","zoom","duration","centeredPoints","component","VCard","VCardText","VDivider","VIcon","VOverlay","VProgressCircular"],"mappings":"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","file":"js/chunk-2d20738a.88112d4a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"d-flex align-center mb-2\"},[_c('p',{staticClass:\"mb-0\"},[_c('v-icon',[_vm._v(\"mdi-map-marker\")]),_vm._v(\" Lokasi Lahan\")],1),_c('v-divider',{staticClass:\"ml-2\"})],1),_c('v-card',{staticClass:\"rounded-xl elevation-0 overflow-hidden mb-4\",staticStyle:{\"width\":\"100%\"}},[_c('v-card-text',{staticClass:\"pa-0\",staticStyle:{\"position\":\"relative\",\"width\":\"100%\"}},[(_vm.maps.loading.show)?_c('v-overlay',{attrs:{\"absolute\":\"\",\"justify-center\":\"\",\"align-center\":\"\"}},[_c('div',{staticClass:\"d-flex flex-column align-center justify-center\"},[_c('v-progress-circular',{attrs:{\"size\":80,\"width\":7,\"indeterminate\":\"\",\"color\":\"white\"}}),_c('p',{staticClass:\"mb-0 text-center mt-4\"},[_vm._v(_vm._s(_vm.maps.loading.text || 'Loading...'))])],1)]):_vm._e(),_c('div',{staticClass:\"overflow-hidden rounded-xl\",staticStyle:{\"position\":\"relative\",\"width\":\"100%\"},attrs:{\"id\":\"mapboxWrapper\",\"data-aos\":\"fade-down\"}},[_c('div',{key:this.section + _vm.maps.key,ref:this.section + 'mapbox',staticClass:\"rounded-xl overflow-hidden\",staticStyle:{\"height\":\"300px\",\"width\":\"100%!important\"},attrs:{\"id\":(\"LahanDetailMapboxContainer\" + (this.section))}})])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n      <div class=\"d-flex align-center mb-2\">\r\n          <p class=\"mb-0\"><v-icon>mdi-map-marker</v-icon> Lokasi Lahan</p>\r\n          <v-divider class=\"ml-2\"></v-divider>\r\n      </div>\r\n      <v-card class=\"rounded-xl elevation-0 overflow-hidden mb-4\" style=\"width: 100%\">\r\n        <v-card-text class=\"pa-0\" style=\"position: relative;width: 100%\">\r\n            <!-- loading overlay -->\r\n            <v-overlay v-if=\"maps.loading.show\" absolute justify-center align-center>\r\n                <div class=\"d-flex flex-column align-center justify-center\">\r\n                    <v-progress-circular\r\n                        :size=\"80\"\r\n                        :width=\"7\"\r\n                        indeterminate\r\n                        color=\"white\"\r\n                    >\r\n                    </v-progress-circular>\r\n                    <p class=\"mb-0 text-center mt-4\">{{ maps.loading.text || 'Loading...' }}</p>\r\n                </div>\r\n            </v-overlay>\r\n            <!-- Mapbox -->\r\n            <div id=\"mapboxWrapper\"\r\n                data-aos=\"fade-down\"\r\n                class=\"overflow-hidden rounded-xl\" style=\"position: relative;width: 100%\"\r\n            >\r\n                <!-- map -->\r\n                <div :id=\"`LahanDetailMapboxContainer${this.section}`\" :ref=\"this.section + 'mapbox'\" :key=\"this.section + maps.key\" \r\n                    style=\"height: 300px;width: 100%!important\" class=\"rounded-xl overflow-hidden\"></div>\r\n            </div>\r\n        </v-card-text>\r\n      </v-card>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\"\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default {\r\n    props: {\r\n        section: {\r\n          type: String\r\n        },\r\n        long: {\r\n            type: String,\r\n            default: null\r\n        },\r\n        lat: {\r\n          type: String,\r\n          default: null\r\n        },\r\n        lahanNo: {\r\n            type: String,\r\n            default: null\r\n        }\r\n    },\r\n    data: () => ({\r\n        maps:{\r\n            accessToken: '',\r\n            mapStyle: '',\r\n            model: null,\r\n            attribution: '&copy; <a target=\"_blank\" href=\"http://osm.org/copyright\">OpenStreetMap</a>',\r\n            center: [113.921300, -0.789300],\r\n            // center: [39.826204, 21.422484],\r\n            // center: [107.52657620636666, -7.0917231719],\r\n            url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n            legends: {\r\n                model: ''\r\n            },\r\n            listMarker: [],\r\n            loading: {\r\n                show: false,\r\n                text: 'Loading...'\r\n            },\r\n            zoom: 3,\r\n            geojson: {},\r\n            key: 9292183,\r\n            layerId: 0,\r\n            hoveredStateId: 0,\r\n            layerStyle: {\r\n                outline: {\r\n                    color: '#000000'\r\n                },\r\n                fill: {\r\n                    color: '#f06800'\r\n                },\r\n            },\r\n            popup: {\r\n                model: false,\r\n                content: {\r\n                title: '',\r\n                description: ''\r\n                }\r\n            }\r\n        },\r\n    }),\r\n    async mounted() {\r\n        this.maps.loading.show = true\r\n        this.maps.accessToken = this.$store.state.maps.accessToken\r\n        this.maps.mapStyle = this.$store.state.maps.mapStyle\r\n        if (this.lahanNo) {\r\n            if (this.lahanNo.length > 0) await this.initializeMapMultipleMarker(this.lahanNo)\r\n        } else await this.initializeMap()\r\n    },\r\n    methods: {\r\n        errorResponse(error) {\r\n            console.log(error)\r\n            if (error.response) {\r\n                if (error.response.status) {\r\n                    if (error.response.status == 401) {\r\n                        localStorage.removeItem(\"token\");\r\n                        this.$router.push(\"/\");\r\n                    } else Swal.fire({\r\n                        title: 'Error!',\r\n                        text: `${error.response.message}`,\r\n                        icon: 'error',\r\n                        confirmButtonColor: '#f44336',\r\n                    }) \r\n                } else Swal.fire({\r\n                    title: 'Error!',\r\n                    text: `${error.message}`,\r\n                    icon: 'error',\r\n                    confirmButtonColor: '#f44336',\r\n                }) \r\n            }\r\n        },\r\n        // maps\r\n        async initializeMap(layIndex) {\r\n            try {\r\n                const mapOptions = this.maps\r\n                const markerCoordinates = [this.long, this.lat]\r\n                mapboxgl.accessToken = mapOptions.accessToken\r\n                if (!mapboxgl.supported()) {\r\n                    Swal.fire({\r\n                        title: 'Warning!',\r\n                        text: `Your browser does not support Mapbox GL.`,\r\n                        icon: 'error',\r\n                        confirmButtonColor: '#f44336',\r\n                    }) \r\n                } else if (markerCoordinates) {\r\n                    mapOptions.loading.show = true\r\n                    let layerId = mapOptions.layerId\r\n                    const layerStyle = mapOptions.layerStyle\r\n                    layerStyle.fill.color = this._utils.getRandomColor()\r\n                    mapOptions.loading.text = 'Initialize map...'\r\n                    let map = await new mapboxgl.Map({\r\n                        container: `LahanDetailMapboxContainer${this.section}`, // container ID\r\n                        style: mapOptions.mapStyle, // style URL\r\n                        center: mapOptions.center,\r\n                        zoom: mapOptions.zoom,\r\n                        projection: 'globe'\r\n                    });\r\n                    await map.on(\"load\", async function() {\r\n                        // add fog\r\n                        await map.setFog({\r\n                            color: 'rgb(186, 210, 235)', // Lower atmosphere\r\n                            'high-color': 'rgb(36, 92, 223)', // Upper atmosphere\r\n                            'horizon-blend': 0.02, // Atmosphere thickness (default 0.2 at low zooms)\r\n                            'space-color': 'rgb(11, 11, 25)', // Background color\r\n                            'star-intensity': 0.6 // Background star brightness (default 0.35 at low zoooms )\r\n                        });\r\n                        // add fullscreen function\r\n                        await map.addControl(new mapboxgl.FullscreenControl());\r\n                        // Add zoom and rotation controls to the map.\r\n                        await map.addControl(new mapboxgl.NavigationControl());\r\n                        const marker1 = new mapboxgl.Marker()\r\n                        .setLngLat(markerCoordinates)\r\n                        .addTo(map);\r\n                        await map.flyTo({\r\n                            center: markerCoordinates,\r\n                            zoom: 9,\r\n                            duration: 7 * 1000\r\n                        });\r\n                        mapOptions.loading.show = false\r\n                    })\r\n                }\r\n            } catch (err) {\r\n                this.errorResponse(err)\r\n                this.maps.loading.show = false\r\n            }\r\n        },\r\n        async initializeMapMultipleMarker(lahanNo) {\r\n            try {\r\n                let mapOptions = this.maps\r\n                let store = this.$store\r\n                let utils = this._utils\r\n                mapboxgl.accessToken = mapOptions.accessToken\r\n                if (!mapboxgl.supported()) {\r\n                    Swal.fire({\r\n                        title: 'Warning!',\r\n                        text: `Your browser does not support Mapbox GL.`,\r\n                        icon: 'error',\r\n                        confirmButtonColor: '#f44336',\r\n                    }) \r\n                } else {\r\n                    mapOptions.loading.show = true\r\n                    let layerId = mapOptions.layerId\r\n                    const layerStyle = mapOptions.layerStyle\r\n                    const lahans = lahanNo.split(',')\r\n                    let markers = []\r\n                    let pointsMarker = []\r\n\r\n                    layerStyle.fill.color = this._utils.getRandomColor()\r\n                    mapOptions.loading.text = 'Initialize map...'\r\n                    let map = await new mapboxgl.Map({\r\n                        container: `LahanDetailMapboxContainer${this.section}`, // container ID\r\n                        style: mapOptions.mapStyle, // style URL\r\n                        center: mapOptions.center,\r\n                        zoom: mapOptions.zoom,\r\n                        projection: 'globe'\r\n                    });\r\n                    await map.on(\"load\", async function() {\r\n                        // add fog\r\n                        await map.setFog({\r\n                            color: 'rgb(186, 210, 235)', // Lower atmosphere\r\n                            'high-color': 'rgb(36, 92, 223)', // Upper atmosphere\r\n                            'horizon-blend': 0.02, // Atmosphere thickness (default 0.2 at low zooms)\r\n                            'space-color': 'rgb(11, 11, 25)', // Background color\r\n                            'star-intensity': 0.6 // Background star brightness (default 0.35 at low zoooms )\r\n                        });\r\n                        // disable double click zoom\r\n                        await map.doubleClickZoom.disable()\r\n                        // add fullscreen function\r\n                        await map.addControl(new mapboxgl.FullscreenControl());\r\n                        // Add zoom and rotation controls to the map.\r\n                        await map.addControl(new mapboxgl.NavigationControl());\r\n                        for (let lIndex = 0; lIndex < lahans.length; lIndex++) {\r\n                            const resLahan = await axios.get(store.getters.getApiUrl(`GetLahanDetail?id=1&lahan_no=${lahans[lIndex]}`), store.state.apiConfig)\r\n                            const dataLahan = resLahan.data.data.result\r\n                            if (dataLahan) {\r\n                                const markerCoordinates = [parseFloat(dataLahan.longitude), parseFloat(dataLahan.latitude)]\r\n                                const popupContent = `\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td>Kabupaten</td>\r\n                                            <td>:</td>\r\n                                            <td>${ dataLahan.namaKabupaten || '-' }</td>    \r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Kecamatan</td>\r\n                                            <td>:</td>\r\n                                            <td>${ dataLahan.namaKecamatan || '-' }</td>    \r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Desa</td>\r\n                                            <td>:</td>\r\n                                            <td>${ dataLahan.namaDesa || '-' }</td>    \r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Petani</td>\r\n                                            <td>:</td>\r\n                                            <td>${ dataLahan.namaPetani || '-' }</td>    \r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Luas Lahan</td>\r\n                                            <td>:</td>\r\n                                            <td>${ utils.numberFormat(dataLahan.land_area) } m<sup>2</sup></td>    \r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Tipe Lahan</td>\r\n                                            <td>:</td>\r\n                                            <td>${ dataLahan.lahan_type || '-' }</td>    \r\n                                        </tr>\r\n                                    </table>`\r\n                                markers[lIndex] = new mapboxgl.Marker()\r\n                                .setLngLat(markerCoordinates)\r\n                                .setPopup(new mapboxgl.Popup().setHTML(popupContent))\r\n                                .addTo(map);\r\n\r\n                                markers[lIndex].getElement().addEventListener('dblclick', () => {\r\n                                    map.flyTo({\r\n                                        center: markerCoordinates,\r\n                                        zoom: 15,\r\n                                        duration: 3 * 1000\r\n                                    });\r\n                                });\r\n                                pointsMarker.push(markerCoordinates)\r\n                            }\r\n                        }\r\n                        console.log(pointsMarker)\r\n                        var features = turf.points(pointsMarker);\r\n                        var turfCenter = turf.center(features);\r\n                        const centeredPoints = turfCenter.geometry.coordinates \r\n                        await map.flyTo({\r\n                            center: centeredPoints,\r\n                            zoom: 14,\r\n                            duration: 3 * 1000\r\n                        });\r\n                        mapOptions.loading.show = false\r\n                    })\r\n                }\r\n\r\n            } catch (err) {\r\n                this.errorResponse(err)\r\n                this.maps.loading.show = false\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DetailLahanMap.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DetailLahanMap.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DetailLahanMap.vue?vue&type=template&id=d550f98a&\"\nimport script from \"./DetailLahanMap.vue?vue&type=script&lang=js&\"\nexport * from \"./DetailLahanMap.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VOverlay } from 'vuetify/lib/components/VOverlay';\nimport { VProgressCircular } from 'vuetify/lib/components/VProgressCircular';\ninstallComponents(component, {VCard,VCardText,VDivider,VIcon,VOverlay,VProgressCircular})\n"],"sourceRoot":""}