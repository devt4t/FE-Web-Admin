{"version":3,"sources":["webpack:///../../../src/components/VFileInput/VFileInput.ts","webpack:///../../../src/components/VTextField/index.ts","webpack:///../../../src/components/VTextarea/VTextarea.ts","webpack:///./src/views/Activity/ScopingVisit/components/FormModal.vue","webpack:///src/views/Activity/ScopingVisit/components/FormModal.vue","webpack:///./src/views/Activity/ScopingVisit/components/FormModal.vue?ed4e","webpack:///./src/views/Activity/ScopingVisit/components/FormModal.vue?d8c6"],"names":["VTextField","extend","name","model","prop","event","props","chips","Boolean","clearable","type","default","counterSizeString","String","counterString","hideInput","placeholder","prependIcon","readonly","showSize","Number","validator","v","includes","smallChips","truncateLength","value","undefined","val","wrapInArray","every","computed","classes","options","call","this","computedCounterValue","fileCount","isMultiple","lazyValue","length","File","$vuetify","lang","t","bytes","internalArrayValue","reduce","size","humanReadableFileSize","base","internalValue","get","set","$emit","isDirty","isLabelActive","$attrs","hasOwnProperty","text","isFocused","hasLabel","map","file","truncatedText","truncateText","hasChips","watch","handler","consoleError","immediate","deepEqual","$refs","input","files","methods","clearableCallback","genChips","index","$createElement","VChip","small","on","click:close","splice","genControl","render","data","style","mergeStyles","display","genInput","domProps","change","onInput","genSelections","genPrependSlot","icon","genIcon","click","genSlot","genSelectionText","counter","children","$scopedSlots","selection","forEach","push","staticClass","class","genTextFieldSlot","node","e","target","initialValue","onKeyDown","str","charsKeepOneSide","Math","floor","slice","baseMixins","mixins","autoGrow","noResize","rowHeight","isNaN","parseFloat","rows","parseInt","noResizeHandle","$nextTick","calculateInputHeight","mounted","setTimeout","height","scrollHeight","minHeight","max","tag","attrs","keyCode","stopPropagation","_vm","_c","_self","showModal","callback","$$v","expression","_v","$event","loading","show","ref","staticStyle","lottie","_s","localConfig","requiredInputIcon","_l","inputsGroup","ig","igIndex","showFormInputs","key","title","editId","$store","state","User","role_name","emailToGis","sendEmailToGIS","_e","items_key","itemKey","iKIndex","inputs","lgView","labelIcon","label","required","potential_dusun","potential_description","$set","inputType","itemText","itemValue","items","rounded","transition","scopedSlots","_u","fn","proxy","menu","tooltip","_g","_b","modelShow","dateType","append","dense","hideDetails","multiple","accept","id","chip","setUrlFileImage","village_figures","village_figure","village_figure_index","position","phone","whatsapp","modifyTotalSubData","showSaveButton","disabledSave","save","formStatus","gisInputCheck","photosInputCheck","staticRenderFns","components","LottieAnimation","programYear","imageKeyComponent","program_year","province","regency","district","village","scooping_date","land_area","accessibility","formOptions","total_male","total_female","total_kk","land_type","sort","land_slope","land_height","vegetation_density","water_source","rainfall","agroforestry_type","government_place","land_coverage","electricity_source","total_dusun","dry_land_area","village_polygon","dry_land_polygon","photo_road_access","preview","photo_meeting","photo_dry_land","village_profile","gis_role","treeAnimation","windowWidth","window","innerWidth","breakLayoutFrom","raw_data","newVal","range","JSON","parse","stringify","_utils","dateFormat","getOptionsData","url","getters","getApiUrl","res","axios","apiConfig","listScooping","result","Swal","fire","confirmButtonColor","confirmButtonText","err","errorResponse","photoFileChanged","requiredEmpty","Object","entries","vm","form","gisInputs","gisInputEmpty","filter","n","photos_key","empty","console","log","showedModal","arrayInput","addEventListener","onResize","error","response","status","confirm","localStorage","removeItem","$router","email_to_gis","separateInputsPerType","string","number","date","select","split","start_scooping_date","end_scooping_date","city","scooping_figures","imageKeyInput","inputKey","apiUrlImage","a","b","localeCompare","loadingOverlayText","pop","moment","format","multipleInput","showCancelButton","cancelButtonColor","cancelButtonText","isConfirmed","loadingOverlay","scoopingDateRange","toString","slope","altitude","user_id","email","imgKey","imgListName","imgIndex","imgRes","uploadFiles","replace","post","message","confirmSendEmail","apiUrl","inputsString","inputsNumber","inputsDate","inputsSelect","inputsMultiple","inputsMultipleInput","inputsFile","data_no","URL","createObjectURL","resetData","getData","section","user","showLightbox","imgs","lightbox","typeName","prefix","dir","fileToUpload","generateFormData","nama","responseName","new_name","component","VAutocomplete","VBtn","VCard","VCardActions","VCardText","VCardTitle","VCol","VDatePicker","VDialog","VDivider","VFileInput","VIcon","VImg","VMenu","VOverlay","VProgressCircular","VRow","VTextarea","VTooltip"],"mappings":"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","file":"js/chunk-4d5388b7.5fdefa4b.js","sourcesContent":["// Styles\nimport './VFileInput.sass'\n\n// Extensions\nimport VTextField from '../VTextField'\n\n// Components\nimport { VChip } from '../VChip'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n// Utilities\nimport { deepEqual, humanReadableFileSize, wrapInArray } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\nimport { mergeStyles } from '../../util/mergeData'\n\nexport default VTextField.extend({\n  name: 'v-file-input',\n\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n\n  props: {\n    chips: Boolean,\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize',\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter',\n    },\n    hideInput: Boolean,\n    placeholder: String,\n    prependIcon: {\n      type: String,\n      default: '$file',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: (v: boolean | number) => {\n        return (\n          typeof v === 'boolean' ||\n          [1000, 1024].includes(v)\n        )\n      },\n    } as PropValidator<boolean | 1000 | 1024>,\n    smallChips: Boolean,\n    truncateLength: {\n      type: [Number, String],\n      default: 22,\n    },\n    type: {\n      type: String,\n      default: 'file',\n    },\n    value: {\n      default: undefined,\n      validator: val => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object')\n      },\n    } as PropValidator<File | File[]>,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-file-input': true,\n      }\n    },\n    computedCounterValue (): string {\n      const fileCount = (this.isMultiple && this.lazyValue)\n        ? this.lazyValue.length\n        : (this.lazyValue instanceof File) ? 1 : 0\n\n      if (!this.showSize) return this.$vuetify.lang.t(this.counterString, fileCount)\n\n      const bytes = this.internalArrayValue.reduce((bytes: number, { size = 0 }: File) => {\n        return bytes + size\n      }, 0)\n\n      return this.$vuetify.lang.t(\n        this.counterSizeString,\n        fileCount,\n        humanReadableFileSize(bytes, this.base === 1024)\n      )\n    },\n    internalArrayValue (): File[] {\n      return wrapInArray(this.internalValue)\n    },\n    internalValue: {\n      get (): File[] {\n        return this.lazyValue\n      },\n      set (val: File | File[]) {\n        this.lazyValue = val\n        this.$emit('change', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.internalArrayValue.length > 0\n    },\n    isLabelActive (): boolean {\n      return this.isDirty\n    },\n    isMultiple (): boolean {\n      return this.$attrs.hasOwnProperty('multiple')\n    },\n    text (): string[] {\n      if (!this.isDirty && (this.isFocused || !this.hasLabel)) return [this.placeholder]\n\n      return this.internalArrayValue.map((file: File) => {\n        const {\n          name = '',\n          size = 0,\n        } = file\n\n        const truncatedText = this.truncateText(name)\n\n        return !this.showSize\n          ? truncatedText\n          : `${truncatedText} (${humanReadableFileSize(size, this.base === 1024)})`\n      })\n    },\n    base (): 1000 | 1024 | undefined {\n      return typeof this.showSize !== 'boolean' ? this.showSize : undefined\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n  },\n\n  watch: {\n    readonly: {\n      handler (v) {\n        if (v === true) consoleError('readonly is not supported on <v-file-input>', this)\n      },\n      immediate: true,\n    },\n    value (v) {\n      const value = this.isMultiple ? v : v ? [v] : []\n      if (!deepEqual(value, this.$refs.input.files)) {\n        // When the input value is changed programatically, clear the\n        // internal input's value so that the `onInput` handler\n        // can be triggered again if the user re-selects the exact\n        // same file(s). Ideally, `input.files` should be\n        // manipulated directly but that property is readonly.\n        this.$refs.input.value = ''\n      }\n    },\n  },\n\n  methods: {\n    clearableCallback () {\n      this.internalValue = this.isMultiple ? [] : null\n      this.$refs.input.value = ''\n    },\n    genChips () {\n      if (!this.isDirty) return []\n\n      return this.text.map((text, index) => this.$createElement(VChip, {\n        props: { small: this.smallChips },\n        on: {\n          'click:close': () => {\n            const internalValue = this.internalValue\n            internalValue.splice(index, 1)\n            this.internalValue = internalValue // Trigger the watcher\n          },\n        },\n      }, [text]))\n    },\n    genControl () {\n      const render = VTextField.options.methods.genControl.call(this)\n\n      if (this.hideInput) {\n        render.data!.style = mergeStyles(\n          render.data!.style,\n          { display: 'none' }\n        )\n      }\n\n      return render\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      // We should not be setting value\n      // programmatically on the input\n      // when it is using type=\"file\"\n      delete input.data!.domProps!.value\n\n      // This solves an issue in Safari where\n      // nothing happens when adding a file\n      // do to the input event not firing\n      // https://github.com/vuetifyjs/vuetify/issues/7941\n      delete input.data!.on!.input\n      input.data!.on!.change = this.onInput\n\n      return [this.genSelections(), input]\n    },\n    genPrependSlot () {\n      if (!this.prependIcon) return null\n\n      const icon = this.genIcon('prepend', () => {\n        this.$refs.input.click()\n      })\n\n      return this.genSlot('prepend', 'outer', [icon])\n    },\n    genSelectionText (): string[] {\n      const length = this.text.length\n\n      if (length < 2) return this.text\n      if (this.showSize && !this.counter) return [this.computedCounterValue]\n      return [this.$vuetify.lang.t(this.counterString, length)]\n    },\n    genSelections () {\n      const children = []\n\n      if (this.isDirty && this.$scopedSlots.selection) {\n        this.internalArrayValue.forEach((file: File, index: number) => {\n          if (!this.$scopedSlots.selection) return\n\n          children.push(\n            this.$scopedSlots.selection({\n              text: this.text[index],\n              file,\n              index,\n            })\n          )\n        })\n      } else {\n        children.push(this.hasChips && this.isDirty ? this.genChips() : this.genSelectionText())\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-file-input__text',\n        class: {\n          'v-file-input__text--placeholder': this.placeholder && !this.isDirty,\n          'v-file-input__text--chips': this.hasChips && !this.$scopedSlots.selection,\n        },\n      }, children)\n    },\n    genTextFieldSlot () {\n      const node = VTextField.options.methods.genTextFieldSlot.call(this)\n\n      node.data!.on = {\n        ...(node.data!.on || {}),\n        click: () => this.$refs.input.click(),\n      }\n\n      return node\n    },\n    onInput (e: Event) {\n      const files = [...(e.target as HTMLInputElement).files || []]\n\n      this.internalValue = this.isMultiple ? files : files[0]\n\n      // Set initialValue here otherwise isFocused\n      // watcher in VTextField will emit a change\n      // event whenever the component is blurred\n      this.initialValue = this.internalValue\n    },\n    onKeyDown (e: KeyboardEvent) {\n      this.$emit('keydown', e)\n    },\n    truncateText (str: string) {\n      if (str.length < Number(this.truncateLength)) return str\n      const charsKeepOneSide = Math.floor((Number(this.truncateLength) - 1) / 2)\n      return `${str.slice(0, charsKeepOneSide)}…${str.slice(str.length - charsKeepOneSide)}`\n    },\n  },\n})\n","import VTextField from './VTextField'\n\nexport { VTextField }\nexport default VTextField\n","// Styles\nimport './VTextarea.sass'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport Vue from 'vue'\n\ninterface options extends Vue {\n  $refs: {\n    input: HTMLTextAreaElement\n  }\n}\n\nconst baseMixins = mixins<options &\n  InstanceType<typeof VTextField>\n>(\n  VTextField\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-textarea',\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseInt(v, 10)),\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle,\n        ...VTextField.options.computed.classes.call(this),\n      }\n    },\n    noResizeHandle (): boolean {\n      return this.noResize || this.autoGrow\n    },\n  },\n\n  watch: {\n    lazyValue () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n    rowHeight () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n  },\n\n  mounted () {\n    setTimeout(() => {\n      this.autoGrow && this.calculateInputHeight()\n    }, 0)\n  },\n\n  methods: {\n    calculateInputHeight () {\n      const input = this.$refs.input\n      if (!input) return\n\n      input.style.height = '0'\n      const height = input.scrollHeight\n      const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n      // This has to be done ASAP, waiting for Vue\n      // to update the DOM causes ugly layout jumping\n      input.style.height = Math.max(minHeight, height) + 'px'\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      delete input.data!.attrs!.type\n      input.data!.attrs!.rows = this.rows\n\n      return input\n    },\n    onInput (e: Event) {\n      VTextField.options.methods.onInput.call(this, e)\n      this.autoGrow && this.calculateInputHeight()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation()\n      }\n\n      this.$emit('keydown', e)\n    },\n  },\n})\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-dialog',{attrs:{\"content-class\":\"rounded-xl mx-1\",\"max-width\":\"1200\",\"scrollable\":\"\",\"persistent\":\"\"},model:{value:(_vm.showModal),callback:function ($$v) {_vm.showModal=$$v},expression:\"showModal\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"rounded-xl green darken-3 ma-1 pa-2\"},[_c('span',{staticClass:\"white--text\"},[_c('v-btn',{staticClass:\"white dark--text mr-1\",attrs:{\"fab\":\"\",\"x-small\":\"\"}},[_c('v-icon',{attrs:{\"color\":\"grey darken-3\"}},[_vm._v(\"mdi-file-document-edit\")])],1),_vm._v(\" Form Scoping Visit \")],1),_c('v-icon',{staticClass:\"ml-auto\",attrs:{\"color\":\"white\"},on:{\"click\":function($event){_vm.showModal = false}}},[_vm._v(\"mdi-close-circle\")])],1),_c('v-card-text',{staticClass:\"pa-0\"},[_c('v-overlay',{attrs:{\"absolute\":\"\",\"value\":_vm.loading.show}},[_c('div',{staticClass:\"d-flex flex-column justify-center align-center\"},[_c('LottieAnimation',{ref:\"anim\",staticStyle:{\"height\":\"64px\"},attrs:{\"animationData\":_vm.lottie.data.loading,\"loop\":true}}),_c('p',{staticClass:\"mt-2 mb-0\"},[_vm._v(_vm._s(_vm.loading.text)+\" \"),_c('v-progress-circular',{attrs:{\"size\":17,\"width\":3,\"indeterminate\":\"\",\"color\":\"white\"}})],1)],1)]),_c('v-row',{staticClass:\"ma-0 mx-5\"},[_c('v-col',{staticClass:\"d-flex justify-end\",attrs:{\"cols\":\"12\"}},[_c('p',{staticClass:\"mb-0 red--text\"},[_vm._v(\"Tanda \\\"\"),_c('v-icon',{attrs:{\"color\":\"red\"}},[_vm._v(_vm._s(_vm.localConfig.requiredInputIcon))]),_vm._v(\"\\\" menandakan WAJIB DIISI.\")],1)])],1),_vm._l((_vm.inputsGroup),function(ig,igIndex){return (_vm.showFormInputs(ig))?_c('v-row',{key:`IG-${igIndex}`,staticClass:\"ma-0 mx-5\"},[_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('div',{staticClass:\"d-flex align-center\"},[_c('p',{staticClass:\"mb-0\"},[_c('v-icon',{staticClass:\"mr-2\"},[_vm._v(_vm._s(ig.icon))]),_vm._v(_vm._s(ig.title))],1),_c('v-divider',{staticClass:\"mx-2\"}),(ig.title === 'Kelengkapan Data Lahan Kering' && _vm.editId && _vm.$store.state.User.role_name != 'GIS STAFF')?_c('v-btn',{attrs:{\"disabled\":_vm.emailToGis > 1,\"rounded\":\"\",\"color\":\"blue white--text\",\"small\":\"\"},on:{\"click\":() => _vm.sendEmailToGIS(_vm.editId)}},[_c('v-icon',{staticClass:\"mr-1\"},[_vm._v(\"mdi-email-\"+_vm._s(_vm.emailToGis > 1 ? 'check' : 'arrow-right'))]),_vm._v(\"Email to GIS\")],1):_vm._e()],1)]),_vm._l((ig.items_key),function(itemKey,iKIndex){return _c('v-col',{key:`Inputs-${itemKey}-${iKIndex}`,attrs:{\"cols\":\"12\",\"sm\":\"12\",\"md\":_vm.inputs[itemKey].lgView == 12 ? 12 : 6,\"lg\":_vm.inputs[itemKey].lgView}},[(itemKey === 'potential_description')?_c('div',[_c('label',{attrs:{\"for\":\"\"}},[(_vm.inputs[itemKey].labelIcon)?_c('v-icon',{staticClass:\"mr-1\"},[_vm._v(_vm._s(_vm.inputs[itemKey].labelIcon))]):_vm._e(),_vm._v(\" \"+_vm._s(_vm.inputs[itemKey].label)+\" \"),_c('sup',[(_vm.inputs[itemKey].required)?_c('v-icon',{staticStyle:{\"vertical-align\":\"middle\"},attrs:{\"small\":\"\"}},[_vm._v(_vm._s(_vm.localConfig.requiredInputIcon))]):_vm._e()],1)],1),(_vm.inputs.potential_dusun.model !== null && _vm.inputs.potential_dusun.model > 0)?_c('VueEditor',{attrs:{\"placeholder\":\"Deskripsi / alasan dusun berpotensi\"},model:{value:(_vm.inputs.potential_description.model),callback:function ($$v) {_vm.$set(_vm.inputs.potential_description, \"model\", $$v)},expression:\"inputs.potential_description.model\"}}):_c('v-textarea',{staticClass:\"rounded-xl\",attrs:{\"hide-details\":\"\",\"disabled\":\"\",\"outlined\":\"\",\"placeholder\":\"Deskripsi disabled. Total dusun berpotensi 0.\"}})],1):(_vm.inputs[itemKey].inputType == 'autocomplete')?_c('v-autocomplete',{attrs:{\"dense\":\"\",\"multiple\":_vm.inputs[itemKey].type == 'Multiple',\"color\":\"success\",\"hide-details\":\"\",\"item-color\":\"success\",\"item-text\":_vm.inputs[itemKey].itemText,\"item-value\":_vm.inputs[itemKey].itemValue,\"items\":_vm.inputs[itemKey].items,\"label\":_vm.inputs[itemKey].label,\"loading\":_vm.inputs[itemKey].loading,\"menu-props\":{rounded: 'xl',transition: 'slide-y-transition'},\"no-data-text\":_vm.inputs[itemKey].loading ? 'Loading...' : 'No Data',\"outlined\":\"\",\"rounded\":\"\"},scopedSlots:_vm._u([{key:\"label\",fn:function(){return [(_vm.inputs[itemKey].labelIcon)?_c('v-icon',{staticClass:\"mr-1\"},[_vm._v(_vm._s(_vm.inputs[itemKey].labelIcon))]):_vm._e(),_vm._v(\" \"+_vm._s(_vm.inputs[itemKey].label)+\" \"),_c('sup',[(_vm.inputs[itemKey].required)?_c('v-icon',{staticStyle:{\"vertical-align\":\"middle\"},attrs:{\"small\":\"\"}},[_vm._v(_vm._s(_vm.localConfig.requiredInputIcon))]):_vm._e()],1)]},proxy:true}],null,true),model:{value:(_vm.inputs[itemKey].model),callback:function ($$v) {_vm.$set(_vm.inputs[itemKey], \"model\", $$v)},expression:\"inputs[itemKey].model\"}}):(_vm.inputs[itemKey].inputType == 'datepicker')?_c('v-menu',{attrs:{\"rounded\":\"xl\",\"transition\":\"slide-x-transition\",\"bottom\":\"\",\"min-width\":\"100\",\"offset-y\":\"\",\"close-on-content-click\":false},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on: menu, attrs }){return [_c('v-tooltip',{attrs:{\"top\":\"\",\"content-class\":\"rounded-xl\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on: tooltip }){return [_c('v-text-field',_vm._g(_vm._b({staticClass:\"mb-2 mb-lg-0 mr-0 mr-lg-2\",attrs:{\"dense\":\"\",\"color\":\"green\",\"hide-details\":\"\",\"outlined\":\"\",\"rounded\":\"\",\"readonly\":\"\"},scopedSlots:_vm._u([{key:\"label\",fn:function(){return [_vm._v(\" \"+_vm._s(_vm.inputs[itemKey].label)+\" \"),_c('sup',[(_vm.inputs[itemKey].required)?_c('v-icon',{staticStyle:{\"vertical-align\":\"middle\"},attrs:{\"small\":\"\"}},[_vm._v(_vm._s(_vm.localConfig.requiredInputIcon))]):_vm._e()],1)]},proxy:true}],null,true),model:{value:(_vm.inputs[itemKey].modelShow),callback:function ($$v) {_vm.$set(_vm.inputs[itemKey], \"modelShow\", $$v)},expression:\"inputs[itemKey].modelShow\"}},'v-text-field',attrs,false),{...menu, ...tooltip}))]}}],null,true)},[_c('span',[_vm._v(\"Klik untuk memunculkan datepicker\")])])]}}],null,true),model:{value:(_vm.inputs[itemKey].show),callback:function ($$v) {_vm.$set(_vm.inputs[itemKey], \"show\", $$v)},expression:\"inputs[itemKey].show\"}},[_c('div',{staticClass:\"rounded-xl pb-2 white\"},[_c('v-overlay',{attrs:{\"value\":_vm.inputs[itemKey].loading}},[_c('div',{staticClass:\"d-flex flex-column align-center justify-center\"},[_c('v-progress-circular',{attrs:{\"indeterminate\":\"\",\"color\":\"white\",\"size\":\"64\"}}),_c('p',{staticClass:\"mt-2 mb-0\"},[_vm._v(\"Updating available dates...\")])],1)]),_c('div',{staticClass:\"d-flex flex-column align-center rounded-xl\"},[_c('v-date-picker',{attrs:{\"range\":_vm.inputs[itemKey].dateType === 'range',\"color\":\"green lighten-1 rounded-xl\",\"min\":\"2022-11-24\"},model:{value:(_vm.inputs[itemKey].model),callback:function ($$v) {_vm.$set(_vm.inputs[itemKey], \"model\", $$v)},expression:\"inputs[itemKey].model\"}})],1)],1)]):(_vm.inputs[itemKey].inputType == 'text-field')?_c('v-text-field',{attrs:{\"dense\":\"\",\"color\":\"success\",\"hide-details\":\"\",\"label\":_vm.inputs[itemKey].label,\"outlined\":\"\",\"rounded\":\"\",\"type\":_vm.inputs[itemKey].type == 'Number' ? 'number' : 'text'},scopedSlots:_vm._u([{key:\"label\",fn:function(){return [(_vm.inputs[itemKey].labelIcon)?_c('v-icon',{staticClass:\"mr-1\"},[_vm._v(_vm._s(_vm.inputs[itemKey].labelIcon))]):_vm._e(),_vm._v(\" \"+_vm._s(_vm.inputs[itemKey].label)+\" \"),_c('sup',[(_vm.inputs[itemKey].required)?_c('v-icon',{staticStyle:{\"vertical-align\":\"middle\"},attrs:{\"small\":\"\"}},[_vm._v(_vm._s(_vm.localConfig.requiredInputIcon))]):_vm._e()],1)]},proxy:true},{key:\"append\",fn:function(){return [_c('div',{staticClass:\"mt-1 ml-1\",domProps:{\"innerHTML\":_vm._s(_vm.inputs[itemKey].append)}})]},proxy:true}],null,true),model:{value:(_vm.inputs[itemKey].model),callback:function ($$v) {_vm.$set(_vm.inputs[itemKey], \"model\", $$v)},expression:\"inputs[itemKey].model\"}}):(_vm.inputs[itemKey].inputType == 'file-input')?_c('div',[_c('v-file-input',{attrs:{\"color\":\"success\",\"dense\":_vm.inputs[itemKey].dense,\"hide-details\":_vm.inputs[itemKey].hideDetails,\"outlined\":\"\",\"rounded\":\"\",\"multiple\":_vm.inputs[itemKey].multiple,\"counter\":\"\",\"show-size\":\"\",\"prepend-icon\":_vm.inputs[itemKey].prependIcon,\"accept\":_vm.inputs[itemKey].accept,\"placeholder\":_vm.id ? 'Upload ulang untuk merubah file' : 'Upload file disini',\"disabled\":false,\"label\":_vm.inputs[itemKey].label},scopedSlots:_vm._u([{key:\"label\",fn:function(){return [_vm._v(\" \"+_vm._s(_vm.inputs[itemKey].label)+\" \"),_c('sup',[(_vm.inputs[itemKey].required)?_c('v-icon',{staticStyle:{\"vertical-align\":\"middle\"},attrs:{\"small\":\"\"}},[_vm._v(_vm._s(_vm.localConfig.requiredInputIcon))]):_vm._e()],1)]},proxy:true},{key:\"selection\",fn:function({ index, text, file }){return [(_vm.inputs[itemKey].chip)?_c('v-card',{staticClass:\"rounded-lg mt-2 elevation-0 mr-1 mb-1\",staticStyle:{\"position\":\"relative\"}},[_c('v-chip',{staticClass:\"rounded-pill\",staticStyle:{\"position\":\"absolute\",\"bottom\":\"0\",\"left\":\"0\",\"right\":\"0\",\"z-index\":\"2\"},attrs:{\"color\":\"deep-purple accent-4\",\"dark\":\"\",\"label\":\"\",\"small\":\"\"}},[_vm._v(\" \"+_vm._s(text)+\" \")]),_c('v-img',{staticClass:\"my-2 mb-4 rounded-lg cursor-pointer\",staticStyle:{\"max-width\":\"200px\",\"max-height\":\"110px\"},attrs:{\"src\":_vm.setUrlFileImage(file)}})],1):_c('span',[_vm._v(\" \"+_vm._s(text))])]}}],null,true),model:{value:(_vm.inputs[itemKey].model),callback:function ($$v) {_vm.$set(_vm.inputs[itemKey], \"model\", $$v)},expression:\"inputs[itemKey].model\"}}),(_vm.id && (itemKey.includes('photo') || itemKey == 'village_profile') && false)?_c('div',_vm._l((_vm.inputs[itemKey].preview),function(imgMltple,imgMltpleIndex){return (_vm.inputs[itemKey].chip)?_c('v-card',{key:`image-${itemKey}-${imgMltpleIndex}`,staticClass:\"rounded-lg mt-2 elevation-0 mr-1 mb-1 d-inline-block\",staticStyle:{\"position\":\"relative\"}},[_c('v-chip',{staticClass:\"rounded-pill\",staticStyle:{\"position\":\"absolute\",\"bottom\":\"0\",\"left\":\"0\",\"right\":\"0\",\"z-index\":\"2\"},attrs:{\"color\":\"deep-purple accent-4\",\"dark\":\"\",\"label\":\"\",\"small\":\"\"}},[_vm._v(\" \"+_vm._s(itemKey)+\" \"+_vm._s(imgMltpleIndex)+\" \")]),_c('v-img',{staticClass:\"my-2 mb-4 rounded-lg cursor-pointer\",staticStyle:{\"max-width\":\"200px\",\"max-height\":\"110px\"},attrs:{\"src\":imgMltple},on:{\"click\":function($event){return _vm.showLightbox(_vm.inputs[itemKey].preview, imgMltpleIndex)}}})],1):_vm._e()}),1):_vm._e()],1):_vm._e()],1)})],2):_vm._e()}),(_vm.$store.state.User.role_name != 'GIS STAFF')?_c('v-row',{staticClass:\"ma-0 mx-5\"},[_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('div',{staticClass:\"d-flex align-center\"},[_c('p',{staticClass:\"mb-0\"},[_c('v-icon',{staticClass:\"mr-2\"},[_vm._v(\"mdi-card-account-phone\")]),_vm._v(\"Tokoh Desa\")],1),_c('v-divider',{staticClass:\"mx-2\"})],1)]),_c('v-col',{attrs:{\"cols\":\"12\"}},[_vm._l((_vm.inputs.village_figures.model),function(village_figure,village_figure_index){return _c('v-row',{key:`village_figure_${village_figure_index}`,attrs:{\"data-aos\":\"fade-right\",\"data-aos-offset\":\"-10000\"}},[_c('v-col',{attrs:{\"cols\":\"auto\"}},[_c('v-btn',{staticClass:\"mr-2 elevation-0\",attrs:{\"fab\":\"\",\"color\":\"green white--text\",\"small\":\"\"}},[_vm._v(_vm._s(village_figure_index + 1))])],1),_c('v-col',{attrs:{\"cols\":\"11\"}},[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"12\",\"md\":\"6\",\"lg\":\"6\"}},[_c('v-text-field',{attrs:{\"dense\":\"\",\"color\":\"success\",\"hide-details\":\"\",\"disabled\":false,\"outlined\":\"\",\"rounded\":\"\",\"rules\":[(v) => !!v || 'Field is required']},scopedSlots:_vm._u([{key:\"label\",fn:function(){return [_vm._v(\" Nama \"),_c('sup',[_c('v-icon',{staticStyle:{\"vertical-align\":\"middle\"},attrs:{\"small\":\"\"}},[_vm._v(_vm._s(_vm.localConfig.requiredInputIcon))])],1)]},proxy:true}],null,true),model:{value:(village_figure.name),callback:function ($$v) {_vm.$set(village_figure, \"name\", $$v)},expression:\"village_figure.name\"}})],1),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"12\",\"md\":\"6\",\"lg\":\"6\"}},[_c('v-text-field',{attrs:{\"dense\":\"\",\"color\":\"success\",\"hide-details\":\"\",\"disabled\":false,\"outlined\":\"\",\"rounded\":\"\",\"rules\":[(v) => !!v || 'Field is required']},scopedSlots:_vm._u([{key:\"label\",fn:function(){return [_vm._v(\" Jabatan \"),_c('sup',[_c('v-icon',{staticStyle:{\"vertical-align\":\"middle\"},attrs:{\"small\":\"\"}},[_vm._v(_vm._s(_vm.localConfig.requiredInputIcon))])],1)]},proxy:true}],null,true),model:{value:(village_figure.position),callback:function ($$v) {_vm.$set(village_figure, \"position\", $$v)},expression:\"village_figure.position\"}})],1),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"12\",\"md\":\"6\",\"lg\":\"6\"}},[_c('v-text-field',{attrs:{\"dense\":\"\",\"color\":\"success\",\"hide-details\":\"\",\"prepend-icon\":\"mdi-phone\",\"disabled\":false,\"outlined\":\"\",\"rounded\":\"\",\"type\":\"number\",\"rules\":[(v) => !!v || 'Field is required']},scopedSlots:_vm._u([{key:\"label\",fn:function(){return [_vm._v(\" Nomor HP \"),_c('sup',[_c('v-icon',{staticStyle:{\"vertical-align\":\"middle\"},attrs:{\"small\":\"\"}},[_vm._v(_vm._s(_vm.localConfig.requiredInputIcon))])],1)]},proxy:true}],null,true),model:{value:(village_figure.phone),callback:function ($$v) {_vm.$set(village_figure, \"phone\", $$v)},expression:\"village_figure.phone\"}})],1),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"12\",\"md\":\"6\",\"lg\":\"6\"}},[_c('v-text-field',{attrs:{\"dense\":\"\",\"color\":\"success\",\"hide-details\":\"\",\"label\":\"Whatsapp\",\"disabled\":false,\"outlined\":\"\",\"rounded\":\"\",\"prepend-icon\":\"mdi-whatsapp\",\"type\":\"number\"},model:{value:(village_figure.whatsapp),callback:function ($$v) {_vm.$set(village_figure, \"whatsapp\", $$v)},expression:\"village_figure.whatsapp\"}})],1)],1)],1)],1)}),_c('v-row',{staticClass:\"justify-center mb-2\"},[(_vm.inputs.village_figures.model.length < 5)?_c('v-btn',{key:`village_figures_plus_btn`,staticClass:\"mx-1\",attrs:{\"data-aos\":\"fade-right\",\"data-aos-offset\":\"-10000\",\"fab\":\"\",\"small\":\"\",\"color\":\"green white--text\"},on:{\"click\":() => _vm.modifyTotalSubData('+', 'village_figures')}},[_c('v-icon',[_vm._v(\"mdi-plus\")])],1):_vm._e(),(_vm.inputs.village_figures.model.length > 1)?_c('v-btn',{key:`village_figures_minus_btn`,staticClass:\"mx-1\",attrs:{\"data-aos\":\"fade-left\",\"data-aos-offset\":\"-10000\",\"fab\":\"\",\"small\":\"\",\"color\":\"red\",\"outlined\":\"\"},on:{\"click\":() => _vm.modifyTotalSubData('-', 'village_figures')}},[_c('v-icon',[_vm._v(\"mdi-minus\")])],1):_vm._e()],1)],2)],1):_vm._e()],2),_c('v-card-actions',[_c('v-btn',{staticClass:\"pl-2\",attrs:{\"data-aos\":\"zoom-in\",\"data-aos-duration\":\"300\",\"data-aos-offset\":\"-200\",\"text\":\"\",\"rounded\":\"\",\"color\":\"red\"},on:{\"click\":function($event){_vm.showModal = false}}},[_c('v-icon',{staticClass:\"mr-1\"},[_vm._v(\"mdi-close-circle\")]),_vm._v(\" Keluar \")],1),_c('v-divider',{staticClass:\"mx-2\"}),(_vm.showSaveButton)?_c('v-btn',{key:`saveButton${_vm.disabledSave}`,staticClass:\"px-3 pr-4\",attrs:{\"data-aos\":\"zoom-in\",\"data-aos-duration\":\"300\",\"data-aos-offset\":\"-200\",\"color\":\"primary white--text\",\"rounded\":\"\",\"disabled\":_vm.disabledSave},on:{\"click\":() => _vm.save()}},[(this.editId && (_vm.formStatus == 'document_saving' || _vm.formStatus == 'ready_to_submit') && _vm.gisInputCheck && _vm.photosInputCheck)?_c('span',[_c('v-icon',{staticClass:\"mr-1\"},[_vm._v(\"mdi-send-check\")]),_vm._v(\" Kirim Untuk Ditinjau \")],1):_c('span',[_c('v-icon',{staticClass:\"mr-1\"},[_vm._v(\"mdi-content-save\")]),_vm._v(\" Simpan \")],1)]):_vm._e()],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <v-dialog v-model=\"showModal\"\r\n        content-class=\"rounded-xl mx-1\"\r\n        max-width=\"1200\"\r\n        scrollable\r\n        persistent\r\n    >\r\n        <v-card>\r\n            <v-card-title class=\"rounded-xl green darken-3 ma-1 pa-2\">\r\n                <span class=\"white--text\"><v-btn class=\"white dark--text mr-1\" fab x-small><v-icon color=\"grey darken-3\">mdi-file-document-edit</v-icon></v-btn> Form Scoping Visit </span>\r\n                <v-icon color=\"white\" class=\"ml-auto\" @click=\"showModal = false\">mdi-close-circle</v-icon>\r\n            </v-card-title>\r\n            <v-card-text class=\"pa-0\">\r\n                <!-- Loading -->\r\n                <v-overlay absolute :value=\"loading.show\">\r\n                    <div class=\"d-flex flex-column justify-center align-center\">\r\n                        <LottieAnimation\r\n                            ref=\"anim\"\r\n                            :animationData=\"lottie.data.loading\"\r\n                            :loop=\"true\"\r\n                            style=\"height: 64px;\"\r\n                        />\r\n                        <p class=\"mt-2 mb-0\">{{ loading.text }}\r\n                            <v-progress-circular\r\n                                :size=\"17\"\r\n                                :width=\"3\"\r\n                                indeterminate\r\n                                color=\"white\"\r\n                            >\r\n                            </v-progress-circular>\r\n                        </p>\r\n                    </div>\r\n                </v-overlay>\r\n                <!-- NB -->\r\n                <v-row class=\"ma-0 mx-5\">\r\n                    <v-col cols=\"12\" class=\"d-flex justify-end\">\r\n                        <p class=\"mb-0 red--text\">Tanda \"<v-icon color=\"red\" class=\"\">{{ localConfig.requiredInputIcon }}</v-icon>\" menandakan WAJIB DIISI.</p>\r\n                    </v-col>\r\n                </v-row>\r\n                <!-- Dynamic Inputs -->\r\n                <v-row class=\"ma-0 mx-5\" v-for=\"(ig, igIndex) in inputsGroup\" :key=\"`IG-${igIndex}`\"\r\n                    v-if=\"showFormInputs(ig)\"\r\n                >\r\n                    <!-- Title -->\r\n                    <v-col cols=\"12\">\r\n                        <div class=\"d-flex align-center\">\r\n                            <p class=\"mb-0\"><v-icon class=\"mr-2\">{{ ig.icon }}</v-icon>{{ ig.title }}</p>\r\n                            <v-divider class=\"mx-2\"></v-divider>\r\n                            <v-btn v-if=\"ig.title === 'Kelengkapan Data Lahan Kering' && editId && $store.state.User.role_name != 'GIS STAFF'\" \r\n                                :disabled=\"emailToGis > 1\"\r\n                                rounded \r\n                                color=\"blue white--text\" \r\n                                small \r\n                                @click=\"() => sendEmailToGIS(editId)\"\r\n                                ><v-icon class=\"mr-1\">mdi-email-{{ emailToGis > 1 ? 'check' : 'arrow-right' }}</v-icon>Email to GIS</v-btn>\r\n                        </div>\r\n                    </v-col>\r\n                    <!-- Inputs -->\r\n                    <v-col v-for=\"(itemKey, iKIndex) in ig.items_key\" :key=\"`Inputs-${itemKey}-${iKIndex}`\" cols=\"12\" sm=\"12\" :md=\"inputs[itemKey].lgView == 12 ? 12 : 6\" :lg=\"inputs[itemKey].lgView\" >\r\n                        <!-- Khususon: potential_description -->\r\n                        <div v-if=\"itemKey === 'potential_description'\">\r\n                            <label for=\"\">\r\n                                <v-icon v-if=\"inputs[itemKey].labelIcon\" class=\"mr-1\">{{ inputs[itemKey].labelIcon }}</v-icon>\r\n                                {{ inputs[itemKey].label }} \r\n                                <sup><v-icon v-if=\"inputs[itemKey].required\" small style=\"vertical-align: middle;\">{{ localConfig.requiredInputIcon }}</v-icon></sup>\r\n                            </label>\r\n                            <VueEditor v-if=\"inputs.potential_dusun.model !== null && inputs.potential_dusun.model > 0\" \r\n                                placeholder=\"Deskripsi / alasan dusun berpotensi\"\r\n                                v-model=\"inputs.potential_description.model\"\r\n                            />\r\n                            <v-textarea v-else hide-details disabled outlined class=\"rounded-xl\" placeholder=\"Deskripsi disabled. Total dusun berpotensi 0.\"></v-textarea>\r\n                        </div>\r\n                        <!-- autocomplete -->\r\n                        <v-autocomplete\r\n                            v-else-if=\"inputs[itemKey].inputType == 'autocomplete'\"\r\n                            dense\r\n                            :multiple=\"inputs[itemKey].type == 'Multiple'\"\r\n                            color=\"success\"\r\n                            hide-details\r\n                            item-color=\"success\"\r\n                            :item-text=\"inputs[itemKey].itemText\"\r\n                            :item-value=\"inputs[itemKey].itemValue\"\r\n                            :items=\"inputs[itemKey].items\"\r\n                            :label=\"inputs[itemKey].label\"\r\n                            :loading=\"inputs[itemKey].loading\"\r\n                            :menu-props=\"{rounded: 'xl',transition: 'slide-y-transition'}\"\r\n                            :no-data-text=\"inputs[itemKey].loading ? 'Loading...' : 'No Data'\"\r\n                            outlined\r\n                            rounded\r\n                            v-model=\"inputs[itemKey].model\"\r\n                        >\r\n                            <template v-slot:label>\r\n                                <v-icon v-if=\"inputs[itemKey].labelIcon\" class=\"mr-1\">{{ inputs[itemKey].labelIcon }}</v-icon>\r\n                                {{ inputs[itemKey].label }} \r\n                                <sup><v-icon v-if=\"inputs[itemKey].required\" small style=\"vertical-align: middle;\">{{ localConfig.requiredInputIcon }}</v-icon></sup>\r\n                            </template>\r\n                        </v-autocomplete>\r\n                        <!-- datepicker -->\r\n                        <v-menu \r\n                            v-else-if=\"inputs[itemKey].inputType == 'datepicker'\"\r\n                            rounded=\"xl\"\r\n                            transition=\"slide-x-transition\"\r\n                            bottom\r\n                            min-width=\"100\"\r\n                            offset-y\r\n                            :close-on-content-click=\"false\"\r\n                            v-model=\"inputs[itemKey].show\"\r\n                        >\r\n                            <template v-slot:activator=\"{ on: menu, attrs }\">\r\n                                <v-tooltip top content-class=\"rounded-xl\">\r\n                                    <template v-slot:activator=\"{ on: tooltip }\">\r\n                                        <v-text-field\r\n                                            dense\r\n                                            color=\"green\"\r\n                                            class=\"mb-2 mb-lg-0 mr-0 mr-lg-2\"\r\n                                            hide-details\r\n                                            outlined\r\n                                            rounded\r\n                                            v-bind=\"attrs\"\r\n                                            v-on=\"{...menu, ...tooltip}\"\r\n                                            readonly\r\n                                            v-model=\"inputs[itemKey].modelShow\"\r\n                                        >\r\n                                            <template v-slot:label>\r\n                                                {{ inputs[itemKey].label }} \r\n                                                <sup><v-icon v-if=\"inputs[itemKey].required\" small style=\"vertical-align: middle;\">{{ localConfig.requiredInputIcon }}</v-icon></sup>\r\n                                            </template>\r\n                                        </v-text-field>\r\n                                    </template>\r\n                                    <span>Klik untuk memunculkan datepicker</span>\r\n                                </v-tooltip>\r\n                            </template>\r\n                            <div class=\"rounded-xl pb-2 white\">\r\n                                <v-overlay :value=\"inputs[itemKey].loading\">\r\n                                    <div class=\"d-flex flex-column align-center justify-center\">\r\n                                        <v-progress-circular\r\n                                            indeterminate\r\n                                            color=\"white\"\r\n                                            size=\"64\"\r\n                                        ></v-progress-circular>\r\n                                        <p class=\"mt-2 mb-0\">Updating available dates...</p>\r\n                                    </div>\r\n                                </v-overlay>\r\n                                <div class=\"d-flex flex-column align-center rounded-xl\">\r\n                                    <v-date-picker \r\n                                        :range=\"inputs[itemKey].dateType === 'range'\"\r\n                                        color=\"green lighten-1 rounded-xl\" \r\n                                        v-model=\"inputs[itemKey].model\"\r\n                                        min=\"2022-11-24\"\r\n                                    ></v-date-picker>\r\n                                </div>\r\n                            </div>\r\n                        </v-menu>\r\n                        <!-- text-field -->\r\n                        <v-text-field\r\n                            v-else-if=\"inputs[itemKey].inputType == 'text-field'\"\r\n                            dense\r\n                            color=\"success\"\r\n                            hide-details\r\n                            :label=\"inputs[itemKey].label\"\r\n                            outlined\r\n                            rounded\r\n                            :type=\"inputs[itemKey].type == 'Number' ? 'number' : 'text'\"\r\n                            v-model=\"inputs[itemKey].model\"\r\n                        >\r\n                            <template v-slot:label>\r\n                                <v-icon v-if=\"inputs[itemKey].labelIcon\" class=\"mr-1\">{{ inputs[itemKey].labelIcon }}</v-icon>\r\n                                {{ inputs[itemKey].label }} \r\n                                <sup><v-icon v-if=\"inputs[itemKey].required\" small style=\"vertical-align: middle;\">{{ localConfig.requiredInputIcon }}</v-icon></sup>\r\n                            </template>\r\n                            <template v-slot:append>\r\n                                <div class=\"mt-1 ml-1\" v-html=\"inputs[itemKey].append\"></div>\r\n                            </template>\r\n                        </v-text-field>\r\n                        <!-- file-input -->\r\n                        <div\r\n                            v-else-if=\"inputs[itemKey].inputType == 'file-input'\"\r\n                        >\r\n                            <v-file-input\r\n                                color=\"success\"\r\n                                :dense=\"inputs[itemKey].dense\"\r\n                                :hide-details=\"inputs[itemKey].hideDetails\"\r\n                                outlined\r\n                                rounded\r\n                                :multiple=\"inputs[itemKey].multiple\"\r\n                                counter\r\n                                show-size\r\n                                :prepend-icon=\"inputs[itemKey].prependIcon\"\r\n                                :accept=\"inputs[itemKey].accept\"\r\n                                :placeholder=\"id ? 'Upload ulang untuk merubah file' : 'Upload file disini'\"\r\n                                :disabled=\"false\"\r\n                                :label=\"inputs[itemKey].label\"\r\n                                v-model=\"inputs[itemKey].model\"\r\n                            >\r\n                                <template v-slot:label>\r\n                                    {{ inputs[itemKey].label }} \r\n                                    <sup><v-icon v-if=\"inputs[itemKey].required\" small style=\"vertical-align: middle;\">{{ localConfig.requiredInputIcon }}</v-icon></sup>\r\n                                </template>\r\n                                <template v-slot:selection=\"{ index, text, file }\">\r\n                                    <v-card \r\n                                        class=\"rounded-lg mt-2 elevation-0 mr-1 mb-1\"\r\n                                        style=\"position: relative;\"\r\n                                        v-if=\"inputs[itemKey].chip\"\r\n                                    >\r\n                                        <v-chip\r\n                                            color=\"deep-purple accent-4\"\r\n                                            class=\"rounded-pill\"\r\n                                            dark\r\n                                            label\r\n                                            small\r\n                                            style=\"position: absolute;bottom: 0;left: 0;right: 0;z-index: 2\"\r\n                                        >\r\n                                            {{ text }}\r\n                                        </v-chip>\r\n                                        <v-img\r\n                                            v-bind:src=\"setUrlFileImage(file)\"\r\n                                            class=\"my-2 mb-4 rounded-lg cursor-pointer\"\r\n                                            style=\"max-width: 200px;max-height: 110px;\"\r\n                                        ></v-img>\r\n                                    </v-card>\r\n                                    <span v-else> {{ text }}</span>\r\n                                </template>\r\n                            </v-file-input>\r\n                            <div v-if=\"id && (itemKey.includes('photo') || itemKey == 'village_profile') && false\">\r\n                                <v-card \r\n                                    v-if=\"inputs[itemKey].chip\"\r\n                                    v-for=\"(imgMltple, imgMltpleIndex) in inputs[itemKey].preview\" :key=\"`image-${itemKey}-${imgMltpleIndex}`\"\r\n                                    class=\"rounded-lg mt-2 elevation-0 mr-1 mb-1 d-inline-block\"\r\n                                    style=\"position: relative;\"\r\n                                >\r\n                                    <v-chip\r\n                                        color=\"deep-purple accent-4\"\r\n                                        class=\"rounded-pill\"\r\n                                        dark\r\n                                        label\r\n                                        small\r\n                                        style=\"position: absolute;bottom: 0;left: 0;right: 0;z-index: 2\"\r\n                                    >\r\n                                        {{ itemKey }} {{ imgMltpleIndex }}\r\n                                    </v-chip>\r\n                                    <v-img\r\n                                        v-bind:src=\"imgMltple\"\r\n                                        @click=\"showLightbox(inputs[itemKey].preview, imgMltpleIndex)\"\r\n                                        class=\"my-2 mb-4 rounded-lg cursor-pointer\"\r\n                                        style=\"max-width: 200px;max-height: 110px;\"\r\n                                    ></v-img>\r\n                                </v-card>\r\n                                <!-- <v-carousel \r\n                                    cycle\r\n                                    height=\"300\" \r\n                                    show-arrows-on-hover\r\n                                    hide-delimiter-background\r\n                                    class=\"rounded-xl cursor-pointer\"\r\n                                    style=\"max-width: 500px;\"\r\n                                    :key=\"`image-carousel-${itemKey}-${showModal}`\"\r\n                                >\r\n                                    <v-carousel-item v-for=\"(imgMltple, imgMltpleIndex) in inputs[itemKey].preview\" :key=\"`image-${itemKey}-${imgMltpleIndex}`\">\r\n                                        <v-img\r\n                                            height=\"300\"\r\n                                            v-bind:src=\"imgMltple\"\r\n                                            @click=\"showLightbox(inputs[itemKey].preview, imgMltpleIndex)\"\r\n                                            class=\"my-1 mb-4 rounded-xl cursor-pointer\"\r\n                                        ></v-img>\r\n                                    </v-carousel-item>\r\n                                </v-carousel> -->\r\n                            </div>\r\n                        </div>\r\n                    </v-col>\r\n                </v-row>\r\n                <!-- Tokoh Desa -->\r\n                <v-row class=\"ma-0 mx-5\" v-if=\"$store.state.User.role_name != 'GIS STAFF'\">\r\n                    <v-col cols=\"12\">\r\n                        <div class=\"d-flex align-center\">\r\n                            <p class=\"mb-0\"><v-icon class=\"mr-2\">mdi-card-account-phone</v-icon>Tokoh Desa</p>\r\n                            <v-divider class=\"mx-2\"></v-divider>\r\n                        </div>\r\n                    </v-col>\r\n                    <v-col cols=\"12\">\r\n                        <v-row \r\n                            v-for=\"(village_figure, village_figure_index) in inputs.village_figures.model\" \r\n                            :key=\"`village_figure_${village_figure_index}`\"\r\n                            data-aos=\"fade-right\"\r\n                            data-aos-offset=\"-10000\"\r\n                        >\r\n                            <v-col cols=\"auto\">\r\n                                <v-btn fab class=\"mr-2 elevation-0\" color=\"green white--text\" small >{{ village_figure_index + 1 }}</v-btn>\r\n                            </v-col>\r\n                            <v-col cols=\"11\">\r\n                                <v-row>\r\n                                    <!-- village_figure name -->\r\n                                    <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\r\n                                        <v-text-field\r\n                                            dense\r\n                                            color=\"success\"\r\n                                            hide-details\r\n                                            :disabled=\"false\"\r\n                                            outlined\r\n                                            rounded\r\n                                            :rules=\"[(v) => !!v || 'Field is required']\"\r\n                                            v-model=\"village_figure.name\"\r\n                                        >\r\n                                            <template v-slot:label>\r\n                                                Nama\r\n                                                <sup><v-icon small style=\"vertical-align: middle;\">{{ localConfig.requiredInputIcon }}</v-icon></sup>\r\n                                            </template>\r\n                                        </v-text-field>\r\n                                    </v-col>\r\n                                    <!-- village_figure position -->\r\n                                    <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\r\n                                        <v-text-field\r\n                                            dense\r\n                                            color=\"success\"\r\n                                            hide-details\r\n                                            :disabled=\"false\"\r\n                                            outlined\r\n                                            rounded\r\n                                            :rules=\"[(v) => !!v || 'Field is required']\"\r\n                                            v-model=\"village_figure.position\"\r\n                                        >\r\n                                            <template v-slot:label>\r\n                                                Jabatan\r\n                                                <sup><v-icon small style=\"vertical-align: middle;\">{{ localConfig.requiredInputIcon }}</v-icon></sup>\r\n                                            </template>\r\n                                        </v-text-field>\r\n                                    </v-col>\r\n                                    <!-- village_figure phone -->\r\n                                    <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\r\n                                        <v-text-field\r\n                                            dense\r\n                                            color=\"success\"\r\n                                            hide-details\r\n                                            prepend-icon=\"mdi-phone\"\r\n                                            :disabled=\"false\"\r\n                                            outlined\r\n                                            rounded\r\n                                            type=\"number\"\r\n                                            :rules=\"[(v) => !!v || 'Field is required']\"\r\n                                            v-model=\"village_figure.phone\"\r\n                                        >\r\n                                            <template v-slot:label>\r\n                                                Nomor HP\r\n                                                <sup><v-icon small style=\"vertical-align: middle;\">{{ localConfig.requiredInputIcon }}</v-icon></sup>\r\n                                            </template>\r\n                                        </v-text-field>\r\n                                    </v-col>\r\n                                    <!-- village_figure whatsapp -->\r\n                                    <v-col cols=\"12\" sm=\"12\" md=\"6\" lg=\"6\">\r\n                                        <v-text-field\r\n                                            dense\r\n                                            color=\"success\"\r\n                                            hide-details\r\n                                            label=\"Whatsapp\"\r\n                                            :disabled=\"false\"\r\n                                            outlined\r\n                                            rounded\r\n                                            prepend-icon=\"mdi-whatsapp\"\r\n                                            type=\"number\"\r\n                                            v-model=\"village_figure.whatsapp\"\r\n                                        ></v-text-field>\r\n                                    </v-col>\r\n                                </v-row>\r\n                            </v-col>\r\n                        </v-row>\r\n                        <v-row class=\"justify-center mb-2\">\r\n                            <v-btn v-if=\"inputs.village_figures.model.length < 5\" \r\n                                data-aos=\"fade-right\" data-aos-offset=\"-10000\" \r\n                                :key=\"`village_figures_plus_btn`\" \r\n                                fab small color=\"green white--text\" class=\"mx-1\" \r\n                                @click=\"() => modifyTotalSubData('+', 'village_figures')\"\r\n                            >\r\n                                <v-icon>mdi-plus</v-icon>\r\n                            </v-btn>\r\n                            <v-btn v-if=\"inputs.village_figures.model.length > 1\" \r\n                                data-aos=\"fade-left\" data-aos-offset=\"-10000\" \r\n                                :key=\"`village_figures_minus_btn`\" \r\n                                fab small color=\"red\" outlined class=\"mx-1\"\r\n                                @click=\"() => modifyTotalSubData('-', 'village_figures')\"\r\n                            >\r\n                                <v-icon>mdi-minus</v-icon>\r\n                            </v-btn>\r\n                        </v-row>\r\n                    </v-col>\r\n                </v-row>\r\n            </v-card-text>\r\n            <v-card-actions>\r\n                <v-btn \r\n                    data-aos=\"zoom-in\"\r\n                    data-aos-duration=\"300\"\r\n                    data-aos-offset=\"-200\"\r\n                    text rounded color=\"red\" class=\"pl-2\"\r\n                    @click=\"showModal = false\">\r\n                    <v-icon class=\"mr-1\">mdi-close-circle</v-icon>\r\n                    Keluar\r\n                </v-btn>\r\n                <v-divider class=\"mx-2\"></v-divider>\r\n                <v-btn\r\n                    v-if=\"showSaveButton\"\r\n                    data-aos=\"zoom-in\"\r\n                    data-aos-duration=\"300\"\r\n                    data-aos-offset=\"-200\" \r\n                    color=\"primary white--text\"\r\n                    class=\"px-3 pr-4\"\r\n                    rounded\r\n                    :key=\"`saveButton${disabledSave}`\"\r\n                    :disabled=\"disabledSave\"\r\n                    @click=\"() => save()\"\r\n                >\r\n                <span v-if=\"this.editId && (formStatus == 'document_saving' || formStatus == 'ready_to_submit') && gisInputCheck && photosInputCheck\">\r\n                    <v-icon class=\"mr-1\">mdi-send-check</v-icon>\r\n                    Kirim Untuk Ditinjau\r\n                </span>\r\n                <span v-else>\r\n                    <v-icon class=\"mr-1\">mdi-content-save</v-icon>\r\n                    Simpan\r\n                </span>\r\n                </v-btn>\r\n            </v-card-actions>\r\n        </v-card>\r\n    </v-dialog>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\nimport LottieAnimation from 'lottie-web-vue'\r\nimport Swal from 'sweetalert2'\r\n\r\nimport formOptions from '@/assets/json/rraPraOptions.json'\r\nimport treeAnimation from '@/assets/lottie/tree.json'\r\n\r\nexport default {\r\n    components: {\r\n        LottieAnimation\r\n    },\r\n    props: {\r\n        show: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        id: {\r\n            type: String,\r\n            default: '0'\r\n        },\r\n        programYear: {\r\n            type: String,\r\n            default: '0'\r\n        }\r\n    },\r\n    data: () => ({\r\n        editId: null,\r\n        imageKeyComponent: 82726366,\r\n        inputs: {\r\n            program_year: {\r\n                model: '',\r\n                required: true,\r\n                type: 'String'\r\n            },\r\n            // village location inputs\r\n            province: {\r\n                label: 'Provinsi',\r\n                model: '',\r\n                items: [],\r\n                itemText: 'name',\r\n                itemValue: 'province_code',\r\n                inputType: 'autocomplete',\r\n                lgView: 6,\r\n                loading: false,\r\n                required: true,\r\n                type: 'String'\r\n            },\r\n            regency: {\r\n                label: 'Kabupaten / Kota',\r\n                model: '',\r\n                items: [],\r\n                itemText: 'name',\r\n                itemValue: 'kabupaten_no',\r\n                inputType: 'autocomplete',\r\n                lgView: 6,\r\n                loading: false,\r\n                required: true,\r\n                type: 'String'\r\n            },\r\n            district: {\r\n                label: 'Kecamatan',\r\n                model: '',\r\n                items: [],\r\n                itemText: 'name',\r\n                itemValue: 'kode_kecamatan',\r\n                inputType: 'autocomplete',\r\n                lgView: 6,\r\n                loading: false,\r\n                required: true,\r\n                type: 'String'\r\n            },\r\n            village: {\r\n                items: [],\r\n                label: 'Desa',\r\n                model: '',\r\n                itemText: 'name',\r\n                itemValue: 'kode_desa',\r\n                inputType: 'autocomplete',\r\n                lgView: 6,\r\n                loading: false,\r\n                required: true,\r\n                type: 'String'\r\n            },\r\n            // scoping date\r\n            scooping_date: {\r\n                loading: false,\r\n                label: 'Tanggal Scooping',\r\n                model: [],\r\n                modelShow: '',\r\n                inputType: 'datepicker',\r\n                dateType: 'range',\r\n                lgView: 6,\r\n                show: false,\r\n                required: true,\r\n                type: 'Date'\r\n            },\r\n            // scoping visit inputs\r\n            land_area: {\r\n                label: 'Luas Desa',\r\n                model: '',\r\n                inputType: 'text-field',\r\n                lgView: 6,\r\n                append: 'Ha',\r\n                loading: false,\r\n                required: true,\r\n                type: 'Number'\r\n            },\r\n            accessibility: {\r\n                items: formOptions.accessibility,\r\n                label: 'Aksesibilitas',\r\n                model: '',\r\n                itemText: 'text',\r\n                itemValue: 'value',\r\n                inputType: 'autocomplete',\r\n                labelIcon: 'mdi-road-variant',\r\n                lgView: 6,\r\n                loading: false,\r\n                required: true,\r\n                type: 'Select'\r\n            },\r\n            total_male: {\r\n                label: 'Jumlah Laki - Laki',\r\n                model: '',\r\n                inputType: 'text-field',\r\n                type: 'Number',\r\n                append: 'orang',\r\n                lgView: 6,\r\n                labelIcon: 'mdi-human-male',\r\n                required: true\r\n            },\r\n            total_female: {\r\n                label: 'Jumlah Perempuan',\r\n                model: '',\r\n                inputType: 'text-field',\r\n                type: 'Number',\r\n                append: 'orang',\r\n                lgView: 6,\r\n                labelIcon: 'mdi-human-female',\r\n                required: true\r\n            },\r\n            total_kk: {\r\n                label: 'Jumlah Keluarga (KK)',\r\n                model: '',\r\n                inputType: 'text-field',\r\n                type: 'Number',\r\n                append: 'KK',\r\n                lgView: 6,\r\n                labelIcon: 'mdi-human-male-female-child',\r\n                required: true\r\n            },\r\n            land_type: {\r\n                items: formOptions.land_type.sort(),\r\n                label: 'Jenis Tanah',\r\n                model: [],\r\n                itemText: 'text',\r\n                itemValue: 'value',\r\n                inputType: 'autocomplete',\r\n                lgView: 6,\r\n                loading: false,\r\n                required: false,\r\n                type: 'Multiple'\r\n            },\r\n            land_slope: {\r\n                items: formOptions.land_slope,\r\n                label: 'Kelerengan Tanah',\r\n                model: [],\r\n                itemText: 'value',\r\n                itemValue: 'value',\r\n                inputType: 'autocomplete',\r\n                lgView: 6,\r\n                loading: false,\r\n                required: false,\r\n                type: 'Multiple'\r\n            },\r\n            land_height: {\r\n                items: formOptions.land_height,\r\n                label: 'Ketinggian Tanah',\r\n                model: [],\r\n                itemText: 'value',\r\n                itemValue: 'value',\r\n                inputType: 'autocomplete',\r\n                lgView: 6,\r\n                loading: false,\r\n                required: false,\r\n                type: 'Multiple'\r\n            },\r\n            vegetation_density: {\r\n                items: formOptions.vegetation_density,\r\n                label: 'Kerapatan Vegetasi',\r\n                model: [],\r\n                itemText: 'value',\r\n                itemValue: 'value',\r\n                inputType: 'autocomplete',\r\n                lgView: 6,\r\n                loading: false,\r\n                required: true,\r\n                type: 'Multiple'\r\n            },\r\n            water_source: {\r\n                items: formOptions.water_source.sort(),\r\n                label: 'Sumber Air',\r\n                model: [],\r\n                itemText: 'text',\r\n                itemValue: 'value',\r\n                inputType: 'autocomplete',\r\n                labelIcon: 'mdi-water-pump',\r\n                lgView: 6,\r\n                loading: false,\r\n                required: true,\r\n                type: 'Multiple'\r\n            },\r\n            rainfall: {\r\n                items: formOptions.rainfall,\r\n                label: 'Curah Hujan',\r\n                model: [],\r\n                itemText: 'value',\r\n                itemValue: 'value',\r\n                inputType: 'autocomplete',\r\n                lgView: 6,\r\n                loading: false,\r\n                required: false,\r\n                type: 'Multiple'\r\n            },\r\n            agroforestry_type: {\r\n                items: formOptions.agroforestry_type.sort(),\r\n                label: 'Pola Tanam Lahan Kering',\r\n                model: [],\r\n                itemText: 'text',\r\n                itemValue: 'value',\r\n                inputType: 'autocomplete',\r\n                lgView: 6,\r\n                loading: false,\r\n                required: true,\r\n                type: 'Multiple'\r\n            },\r\n            government_place: {\r\n                items: formOptions.government_place.sort(),\r\n                label: 'Tempat Pemerintahan',\r\n                model: [],\r\n                itemText: 'value',\r\n                itemValue: 'value',\r\n                inputType: 'autocomplete',\r\n                labelIcon: 'mdi-domain',\r\n                lgView: 12,\r\n                loading: false,\r\n                required: true,\r\n                type: 'Multiple'\r\n            },\r\n            land_coverage: {\r\n                items: formOptions.land_coverage.sort(),\r\n                label: 'Cakupan Lahan',\r\n                model: [],\r\n                itemText: 'value',\r\n                itemValue: 'value',\r\n                inputType: 'autocomplete',\r\n                lgView: 6,\r\n                loading: false,\r\n                required: true,\r\n                type: 'Multiple'\r\n            },\r\n            electricity_source: {\r\n                items: formOptions.electricity_source.sort(),\r\n                label: 'Sumber Listrik',\r\n                model: [],\r\n                itemText: 'value',\r\n                itemValue: 'value',\r\n                inputType: 'autocomplete',\r\n                labelIcon: 'mdi-home-lightning-bolt',\r\n                lgView: 6,\r\n                loading: false,\r\n                required: true,\r\n                type: 'Multiple'\r\n            },\r\n            total_dusun: {\r\n                label: 'Total Dusun',\r\n                model: '',\r\n                inputType: 'text-field',\r\n                lgView: 6,\r\n                append: 'dusun',\r\n                loading: false,\r\n                required: true,\r\n                type: 'Number'\r\n            },\r\n            potential_dusun: {\r\n                label: 'Total Dusun yang Berpotensi',\r\n                model: '',\r\n                inputType: 'text-field',\r\n                lgView: 6,\r\n                append: 'dusun',\r\n                loading: false,\r\n                required: true,\r\n                type: 'Number'\r\n            },\r\n            potential_description: {\r\n                label: 'Deskripsi Potensi',\r\n                model: '',\r\n                inputType: 'text-editor',\r\n                lgView: 12,\r\n                loading: false,\r\n                required: false,\r\n                type: 'String'\r\n            },\r\n            dry_land_area: {\r\n                label: 'Luas Lahan Kering / Kritis',\r\n                model: '',\r\n                inputType: 'text-field',\r\n                lgView: 6,\r\n                append: 'Ha',\r\n                loading: false,\r\n                required: false,\r\n                type: 'Number'\r\n            },\r\n            village_polygon: {\r\n                label: 'Polygon Desa *.kml file',\r\n                dense: true,\r\n                chip: false,\r\n                hideDetails: true,\r\n                accept: '.kml',\r\n                model: null,\r\n                inputType: 'file-input',\r\n                lgView: 6,\r\n                prependIcon: 'mdi-vector-polygon',\r\n                loading: false,\r\n                required: false,\r\n                type: 'File'\r\n            },\r\n            dry_land_polygon: {\r\n                label: 'Polygon Lahan Kering / Kritis *.kml file',\r\n                dense: true,\r\n                chip: false,\r\n                hideDetails: true,\r\n                accept: '.kml',\r\n                model: null,\r\n                inputType: 'file-input',\r\n                lgView: 6,\r\n                prependIcon: 'mdi-vector-polygon',\r\n                loading: false,\r\n                required: false,\r\n                type: 'File'\r\n            },\r\n            // photos\r\n            photo_road_access: {\r\n                label: 'Akses Jalan (maks 5 foto)',\r\n                accept: '.jpg,.JPG,.jpeg,.JPEG,.png,.PNG',\r\n                chip: true,\r\n                model: [],\r\n                preview: null,\r\n                hideDetails: false,\r\n                inputType: 'file-input',\r\n                multiple: true,\r\n                lgView: 12,\r\n                prependIcon: 'mdi-camera',\r\n                loading: false,\r\n                required: false,\r\n                type: 'File'\r\n            },\r\n            photo_meeting: {\r\n                label: 'Pertemuan dengan Tokoh Desa (maks 3 foto)',\r\n                accept: '.jpg,.JPG,.jpeg,.JPEG,.png,.PNG',\r\n                chip: true,\r\n                model: [],\r\n                preview: null,\r\n                inputType: 'file-input',\r\n                hideDetails: false,\r\n                multiple: true,\r\n                lgView: 12,\r\n                prependIcon: 'mdi-camera',\r\n                loading: false,\r\n                required: false,\r\n                type: 'File'\r\n            },\r\n            photo_dry_land: {\r\n                label: 'Lahan Kering (maks 5 foto)',\r\n                accept: '.jpg,.JPG,.jpeg,.JPEG,.png,.PNG',\r\n                chip: true,\r\n                model: null,\r\n                preview: null,\r\n                inputType: 'file-input',\r\n                hideDetails: false,\r\n                multiple: true,\r\n                lgView: 12,\r\n                prependIcon: 'mdi-camera',\r\n                loading: false,\r\n                required: false,\r\n                type: 'File'\r\n            },\r\n            village_profile: {\r\n                label: 'Profil Desa',\r\n                accept: '.jpg,.JPG,.jpeg,.JPEG,.png,.PNG',\r\n                chip: true,\r\n                model: [],\r\n                preview: null,\r\n                inputType: 'file-input',\r\n                hideDetails: false,\r\n                multiple: false,\r\n                lgView: 6,\r\n                prependIcon: 'mdi-camera',\r\n                loading: false,\r\n                required: false,\r\n                type: 'File'\r\n            },\r\n            // Tokoh Desa\r\n            village_figures: {\r\n                label: 'Tokoh Desa',\r\n                model: [],\r\n                default: [{\r\n                        name: null,\r\n                        position: null,\r\n                        phone: null,\r\n                        whatsapp: null\r\n                }],\r\n                loading: false,\r\n                required: true,\r\n                type: 'MultipleInput'\r\n            },\r\n        },\r\n        inputsGroup: [\r\n            {\r\n                title: 'Lokasi & Tanggal Kegiatan Scooping',\r\n                icon: 'mdi-calendar',\r\n                gis_role: false,\r\n                items_key: [\"province\", \"regency\", \"district\", \"village\", \"scooping_date\"]\r\n            },\r\n            {\r\n                title: 'Data General Desa',\r\n                icon: 'mdi-list-box',\r\n                gis_role: false,\r\n                items_key: [\"land_area\", \"accessibility\", \"water_source\", \"electricity_source\", \"government_place\", \"land_coverage\", \"vegetation_density\", \"agroforestry_type\"]\r\n            },\r\n            {\r\n                title: 'Data Populasi Dan Wilayah',\r\n                icon: 'mdi-account-group',\r\n                gis_role: false,\r\n                items_key: [\"total_dusun\", \"potential_dusun\", \"potential_description\", \"total_male\", \"total_female\", \"total_kk\"],\r\n            }, \r\n            {\r\n                title: 'Upload Foto Dokumentasi Kegiatan',\r\n                icon: 'mdi-image-multiple',\r\n                gis_role: false,\r\n                items_key: [\"photo_road_access\", \"photo_meeting\", \"photo_dry_land\", \"village_profile\"],\r\n            }, \r\n            {\r\n                title: 'Kelengkapan Data Lahan Kering',\r\n                icon: 'mdi-land-fields',\r\n                gis_role: true,\r\n                items_key: [\"dry_land_area\", \"land_type\", \"land_slope\", \"land_height\", \"rainfall\"]\r\n            },\r\n            {\r\n                title: 'Upload Polygon File (GIS)',\r\n                icon: 'mdi-map-marker-path',\r\n                gis_role: true,\r\n                items_key: [\"village_polygon\", \"dry_land_polygon\"],\r\n            }\r\n        ],\r\n        formStatus: '',\r\n        emailToGis: 0,\r\n        loading: {\r\n            show: false,\r\n            text: 'Loading...'\r\n        },\r\n        lottie: {\r\n            data: {\r\n                loading: treeAnimation,\r\n            }\r\n        },\r\n        localConfig: {\r\n            windowWidth: window.innerWidth,\r\n            breakLayoutFrom: 1140,\r\n            requiredInputIcon: 'mdi-star'\r\n        },\r\n        raw_data: {}\r\n    }),\r\n    watch: {\r\n        'inputs.scooping_date.model': {\r\n            async handler(newVal) {\r\n                let range = JSON.parse(JSON.stringify(newVal))\r\n                range.sort()\r\n                this.inputs.scooping_date.modelShow = this._utils.dateFormat(range[0], 'DD MMMM Y') + ' ~ ' + this._utils.dateFormat(range[1], 'DD MMMM Y')\r\n            }\r\n        },\r\n        'inputs.province.model': {\r\n            async handler(val) {\r\n                if (val) await this.getOptionsData({type: 'regency'})\r\n            }\r\n        },\r\n        'inputs.regency.model': {\r\n            async handler(val) {\r\n                if (val) await this.getOptionsData({type: 'district'})\r\n            }\r\n        },\r\n        'inputs.district.model': {\r\n            async handler(val) {\r\n                if (val) await this.getOptionsData({type: 'village'})\r\n            }\r\n        },\r\n        'inputs.village.model': {\r\n            async handler(val) {\r\n                try {\r\n                    if (val && !this.id) {\r\n                        // check existing scooping data\r\n                        this.loading.show = true\r\n                        this.loading.text = 'Check existing scooping data...'\r\n                        const url = this.$store.getters.getApiUrl('GetScoopingAll')\r\n                        const res = await axios.get(url, this.$store.state.apiConfig)\r\n                        const listScooping = res.data.data.result.map(val => {return val.village})\r\n                        if (listScooping.includes(val)) {\r\n                            const confirm = await Swal.fire({\r\n                                title: 'Exist!',\r\n                                text: `Kode desa \"${val}\" sudah memiliki data scooping!`,\r\n                                icon: 'warning',\r\n                                confirmButtonColor: '#2e7d32',\r\n                                confirmButtonText: 'Okay'\r\n                            })\r\n                            this.inputs.village.model = null\r\n                        }\r\n                    }\r\n                } catch (err) {this.errorResponse(err)} finally {\r\n                    this.loading.show = false\r\n                }\r\n            }\r\n        },\r\n        'inputs.photo_road_access.model': {\r\n            async handler(val) {\r\n                if (val) if (val.length > 5) {\r\n                    const confirm = await Swal.fire({\r\n                        title: 'Melebihi Batas!',\r\n                        text: `Maksimal 5 foto!`,\r\n                        icon: 'warning',\r\n                        confirmButtonColor: '#2e7d32',\r\n                        confirmButtonText: 'Okay'\r\n                    })\r\n                    this.inputs.photo_road_access.model = val.slice(0, 5)\r\n                }\r\n            }\r\n        },\r\n        'inputs.photo_meeting.model': {\r\n            async handler(val) {\r\n                if (val) if (val.length > 3) {\r\n                    const confirm = await Swal.fire({\r\n                        title: 'Melebihi Batas!',\r\n                        text: `Maksimal 3 foto!`,\r\n                        icon: 'warning',\r\n                        confirmButtonColor: '#2e7d32',\r\n                        confirmButtonText: 'Okay'\r\n                    })\r\n                    this.inputs.photo_meeting.model = val.slice(0, 3)\r\n                }\r\n            }\r\n        },\r\n        'inputs.photo_dry_land.model': {\r\n            async handler(val) {\r\n                if (val) if (val.length > 5) {\r\n                    const confirm = await Swal.fire({\r\n                        title: 'Melebihi Batas!',\r\n                        text: `Maksimal 5 foto!`,\r\n                        icon: 'warning',\r\n                        confirmButtonColor: '#2e7d32',\r\n                        confirmButtonText: 'Okay'\r\n                    })\r\n                    this.inputs.photo_dry_land.model = val.slice(0, 5)\r\n                }\r\n            }\r\n        },\r\n        'inputs.village_profile.model': {\r\n            async handler(val) {\r\n                await this.photoFileChanged(val, 'village_profile')\r\n            }\r\n        },\r\n        'loading.show': {\r\n            handler(val) {\r\n            }\r\n        }\r\n    },\r\n    computed: {\r\n        disabledSave() {\r\n            let requiredEmpty = []\r\n            for (const [key, value] of Object.entries(this.inputs)) {\r\n                if ((key == 'village_figures')) {\r\n                    if (value.required) {if (value.model.length > 0) {\r\n                        value.model.forEach(vm => {\r\n                            if (!vm.name || !vm.position || !vm.phone) requiredEmpty.push('village_figures:name,position,phone')\r\n                        })\r\n                    } else requiredEmpty.push(key)}\r\n                } else if (value.type == 'MultipleInput') {\r\n                    if (value.required) if (value.model.length > 0) {\r\n                        value.model.forEach(vm => {\r\n                            Object.entries(value.form).map(form => {\r\n                                if (form[1].required === true) {\r\n                                    if (!(vm[form[0]] !== null && vm[form[0]] !== 0)) requiredEmpty.push(key)\r\n                                }\r\n                            })\r\n                        })\r\n                    } else requiredEmpty.push(key)\r\n                } else if (value.required) if (!value.model) {\r\n                    requiredEmpty.push(key)\r\n                }\r\n            }\r\n            return requiredEmpty.length > 0 ? true : false\r\n        },\r\n        gisInputCheck() {\r\n            let gisInputs = [] \r\n            let gisInputEmpty = 0\r\n            this.inputsGroup.filter(n => n.gis_role === true).map(val => {gisInputs.push(...val.items_key)})\r\n            gisInputs.map(val => {                \r\n                if (!this.inputs[val].model && val != 'dry_land_polygon') {\r\n                    if (this.editId) {\r\n                        if (!this.raw_data[val] || this.raw_data[val] == '-') gisInputEmpty += 1\r\n                    } else gisInputEmpty += 1\r\n                }\r\n            })\r\n\r\n            if (gisInputEmpty === 0) return true\r\n            return false\r\n        },\r\n        photosInputCheck() {\r\n            let photos_key = [\r\n                'photo_road_access',\r\n                'photo_meeting',\r\n                'photo_dry_land',\r\n                'village_profile'\r\n            ] \r\n            let empty = []\r\n            photos_key.map(key => {\r\n                if (!this.inputs[key].model) {\r\n                    if (this.editId) {\r\n                        if (!this.raw_data[key] || this.raw_data[key] == '-') empty.push(key) \r\n                    } else empty.push(key)\r\n                }\r\n            })\r\n            console.log(empty)\r\n            if (empty.length === 0) return true\r\n            return false\r\n        },\r\n        showModal: {\r\n            get: function () {\r\n                if (this.show) {\r\n                    this.showedModal(this.id)\r\n                }\r\n                return this.show\r\n            },\r\n            set: function(newVal) {\r\n                if (!newVal) this.$emit('action', {type: 'close', name: 'form'})\r\n            }\r\n        },\r\n        showSaveButton() {\r\n            const inputs = Object.entries(this.inputs)\r\n            let empty = 0\r\n            const arrayInput = [\r\n                'land_type',\r\n                'land_slope',\r\n                'land_height',\r\n                'vegetation_density',\r\n                'water_source',\r\n                'rainfall',\r\n                'agroforestry_type',\r\n                'government_place',\r\n                'land_coverage',\r\n                'electricity_source',\r\n                'village_figures'\r\n            ]\r\n            for (const [key, val] of inputs) {\r\n                if (!val.model) empty += 1\r\n                else if (arrayInput.includes(key)) if (val.model.length < 1) empty += 1\r\n            }\r\n            if (empty == 0) return false\r\n\r\n            return true\r\n        },\r\n    },\r\n    async mounted() {\r\n        this.$nextTick(() => {\r\n            window.addEventListener('resize', this.onResize)\r\n        })\r\n    },\r\n    methods: {\r\n        async errorResponse(error) {\r\n            console.log(error)\r\n            if (error.response) {\r\n                if (error.response.status) {\r\n                    if (error.response.status == 401) {\r\n                        const confirm = await Swal.fire({\r\n                            title: 'Session Ended!',\r\n                            text: \"Please login again.\",\r\n                            icon: 'warning',\r\n                            confirmButtonColor: '#2e7d32',\r\n                            confirmButtonText: 'Okay'\r\n                        })\r\n                        if (confirm) {\r\n                            localStorage.removeItem(\"token\");\r\n                            this.$router.push(\"/\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        async getData(id) {\r\n            try {\r\n                this.loading.show = true\r\n                this.loading.text = 'Getting scooping data...'\r\n                const res = await axios.get(this.$store.getters.getApiUrl(`GetDetailScooping?data_no=${id}`), this.$store.state.apiConfig)\r\n                const data = res.data.data.result\r\n                this.raw_data = data\r\n                this.formStatus = data.status\r\n                this.emailToGis = data.email_to_gis\r\n                for (const [key, value] of Object.entries(data)) {\r\n                    if (this.separateInputsPerType().string.includes(key) || this.separateInputsPerType().number.includes(key) || this.separateInputsPerType().date.includes(key) || this.separateInputsPerType().select.includes(key)) this.inputs[key].model = value\r\n                    if (this.separateInputsPerType().multiple.includes(key)) this.inputs[key].model = value ? value.split(\",\") : value\r\n                }\r\n                this.inputs.scooping_date.model = [data.start_scooping_date, data.end_scooping_date]\r\n                this.inputs.province.model = data.province\r\n                this.loading.show = true\r\n                await this.getOptionsData({type: 'regency', id: data.province})\r\n                this.inputs.regency.model = data.city\r\n                this.loading.show = true\r\n                await this.getOptionsData({type: 'district', id: data.city})\r\n                this.inputs.district.model = data.district\r\n                this.loading.show = true\r\n                await this.getOptionsData({type: 'village', id: data.district})\r\n                this.inputs.village.model = data.village\r\n                // village figures\r\n                this.inputs.village_figures.model = data.scooping_figures\r\n                // photos\r\n                const imageKeyInput = [\"photo_road_access\", \"photo_meeting\", \"photo_dry_land\", \"village_profile\"]\r\n                imageKeyInput.forEach(inputKey => {\r\n                    this.inputs[inputKey].preview = []\r\n                    if (data[inputKey]) if (data[inputKey].length > 0) this.inputs[inputKey].preview = data[inputKey].split(',').map(val => {return this.$store.state.apiUrlImage + val})\r\n                })\r\n            } catch (err) {\r\n                this.errorResponse(err)\r\n                this.$emit('action', {type: 'close', name: 'form'})\r\n            } finally {\r\n                this.loading.show = false\r\n            }\r\n        },\r\n        async getDummiesData() {\r\n            try {\r\n                this.loading.show = true\r\n                this.loading.text = 'Set dummy data... :)'\r\n\r\n                const province = 'JT'\r\n                const regency = '33'\r\n                const district = '33.74.15'\r\n                const village = '33.74.15.1001'\r\n                this.inputs.province.model = province\r\n                await this.getOptionsData({type: 'regency', id: province})\r\n                this.inputs.regency.model = regency\r\n                await this.getOptionsData({type: 'district', id: regency})\r\n                this.inputs.district.model = district\r\n                await this.getOptionsData({type: 'village', id: district})\r\n                this.inputs.village.model = village\r\n\r\n                this.inputs.land_area.model = 400000\r\n                this.inputs.accessibility.model = 'Sulit'\r\n                this.inputs.water_source.model = formOptions.water_source\r\n                this.inputs.government_place.model = formOptions.government_place\r\n                this.inputs.electricity_source.model = formOptions.electricity_source\r\n                this.inputs.total_dusun.model = 243\r\n                this.inputs.potential_dusun.model = 50\r\n                this.inputs.potential_description.model = `Masih terdapat banyak lahan kering yang kosong.`\r\n                this.inputs.total_male.model = 654\r\n                this.inputs.total_female.model = 987\r\n                this.inputs.total_kk.model = 321\r\n                this.inputs.potential_dusun.model = 50\r\n                this.inputs.potential_dusun.model = 50\r\n                this.inputs.land_type.model = formOptions.land_type\r\n                this.inputs.land_slope.model = formOptions.land_slope\r\n                this.inputs.land_height.model = formOptions.land_height\r\n                this.inputs.vegetation_density.model = formOptions.vegetation_density\r\n                this.inputs.rainfall.model = formOptions.rainfall\r\n                this.inputs.agroforestry_type.model = formOptions.agroforestry_type\r\n                this.inputs.land_coverage.model = formOptions.land_coverage\r\n                this.inputs.dry_land_area.model = 130500\r\n                this.inputs.village_figures.model = [{\r\n                    name: 'Qwerty',\r\n                    position: 'Keyboard',\r\n                    phone: '1234567890',\r\n                    whatsapp: '0987654321'\r\n                }]\r\n            } catch (err) {\r\n                this.errorResponse(err)\r\n            } finally {\r\n                this.loading.show = false\r\n            }\r\n        },\r\n        async getOptionsData(inputs) {\r\n            try {\r\n                // prepare for calling api\r\n                let url = ''\r\n                \r\n                // set url\r\n                if (inputs.type == 'province') url = 'GetProvince'\r\n                else if (inputs.type == 'regency') url = 'GetKabupaten?province_code=' + this.inputs.province.model\r\n                else if (inputs.type == 'district') url = 'GetKecamatan?kabupaten_no=' + this.inputs.regency.model\r\n                else if (inputs.type == 'village') url = 'GetDesa?&kode_kecamatan=' + this.inputs.district.model\r\n\r\n                this.loading.text = `Getting ${inputs.type} datas...`\r\n\r\n                // reset data \r\n                if (inputs.type == 'regency') {\r\n                    this.inputs.district.model = ''\r\n                    this.inputs.district.items = []\r\n                } if (['regency', 'district'].includes(inputs.type)) { \r\n                    this.inputs.village.model = ''\r\n                    this.inputs.village.items = []\r\n                }\r\n                if (url != '') {\r\n                    url = this.$store.getters.getApiUrl(url) \r\n\r\n                    this.inputs[inputs.type].model = ''\r\n                    this.inputs[inputs.type].loading = true\r\n                    \r\n                    // calling api\r\n                    const res = await axios.get(url, this.$store.state.apiConfig)\r\n                    this.inputs[inputs.type].items = res.data.data.result.sort((a, b) => a.name.localeCompare(b.name))\r\n                }\r\n            } catch (err) {\r\n                this.errorResponse(err)\r\n                this.inputs[inputs.type].items = []\r\n            } finally {\r\n                this.$store.state.loadingOverlayText = null\r\n                this.inputs[inputs.type].loading = false\r\n            }\r\n        },\r\n        modifyTotalSubData(type, name) {\r\n            try {\r\n                if (type == '+') {\r\n                    let inputs = JSON.parse(JSON.stringify(this.inputs[name].default[0]))\r\n                    this.inputs[name].model.push(inputs)\r\n                } else if (type == '-') this.inputs[name].model.pop()\r\n            } catch (err) {this.errorResponse(err)} finally {\r\n            }\r\n        },\r\n        onResize() {\r\n            this.localConfig.windowWidth = window.innerWidth\r\n        },\r\n        photoFileChanged (event, inputKey) {\r\n            // if (event) {\r\n            //     let fileSize = event.size / 1000000\r\n            //     if (fileSize < 10) {\r\n            //         this.inputs[inputKey].model = event\r\n            //         this.inputs[inputKey].preview = URL.createObjectURL(event)\r\n            //     } else {\r\n            //         Swal.fire({\r\n            //             title: 'Too Big!',\r\n            //             text: `Please change your photo file, it's too big. Max 10mb.`,\r\n            //             icon: 'error',\r\n            //             confirmButtonColor: '#f44336',\r\n            //         })\r\n            //         this.inputs[inputKey].model = null\r\n            //         this.inputs[inputKey].preview = null\r\n            //     }\r\n            // } else {\r\n            //     this.inputs[inputKey].model = null\r\n            //     this.inputs[inputKey].preview = null\r\n            // }\r\n        },\r\n        async resetData() {\r\n            try {\r\n                for (const [key, value] of Object.entries(this.inputs)) {\r\n                    if (this.separateInputsPerType().date.includes(key)) value.model = [moment().format('YYYY-MM-DD'), moment().format('YYYY-MM-DD')]\r\n                    else if (this.separateInputsPerType().multipleInput.includes(key)) value.model = await JSON.parse(JSON.stringify(value.default))\r\n                    else value.model = null\r\n                }\r\n                this.formStatus = ''\r\n                this.emailToGis = 0\r\n            } catch (err) {this.errorResponse(err)}\r\n        },\r\n        async save() {\r\n            try {\r\n                const confirm = await Swal.fire({\r\n                    title: 'Apakah kamu yakin?',\r\n                    text: \"Harap dipastikan lagi data yang sudah diisi!\",\r\n                    icon: 'warning',\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: '#2e7d32',\r\n                    cancelButtonColor: '#d33',\r\n                    cancelButtonText: 'Tidak Jadi',\r\n                    confirmButtonText: 'Ya, Lanjutkan!'\r\n                })\r\n                if (confirm.isConfirmed) {\r\n                    this.showModal = false\r\n                    this.$store.state.loadingOverlay = true\r\n                    this.$store.state.loadingOverlayText = 'Menyimpan data \"scooping\"...'\r\n                    const scoopingDateRange = JSON.parse(JSON.stringify(this.inputs.scooping_date.model)).sort()\r\n                    let data = {\r\n                        village: this.inputs.village.model,\r\n                        province: this.inputs.province.model,\r\n                        city: this.inputs.regency.model,\r\n                        district: this.inputs.district.model,\r\n                        start_scooping_date: scoopingDateRange[0],\r\n                        end_scooping_date: scoopingDateRange[1],\r\n                        land_area: this.inputs.land_area.model,\r\n                        accessibility: this.inputs.accessibility.model,\r\n                        water_source: this.inputs.water_source.model.toString(),\r\n                        government_place: this.inputs.government_place.model.toString(),\r\n                        electricity_source: this.inputs.electricity_source.model.toString(),\r\n                        total_dusun: this.inputs.total_dusun.model,\r\n                        potential_dusun: this.inputs.potential_dusun.model,\r\n                        potential_description: this.inputs.potential_description.model,\r\n                        total_male: this.inputs.total_male.model,\r\n                        total_female: this.inputs.total_female.model,\r\n                        total_kk: this.inputs.total_kk.model,\r\n                        dry_land_area: this.inputs.dry_land_area.model,\r\n                        land_type: this.inputs.land_type.model ? this.inputs.land_type.model.toString() : '',\r\n                        slope: this.inputs.land_slope.model ? this.inputs.land_slope.model.toString() : '',\r\n                        altitude: this.inputs.land_height.model ? this.inputs.land_height.model.toString() : '',\r\n                        land_coverage: this.inputs.land_coverage.model ? this.inputs.land_coverage.model.toString() : '',\r\n                        vegetation_density: this.inputs.vegetation_density.model ? this.inputs.vegetation_density.model.toString() : '',\r\n                        rainfall: this.inputs.rainfall.model ? this.inputs.rainfall.model.toString() : '',\r\n                        agroforestry_type: this.inputs.agroforestry_type.model ? this.inputs.agroforestry_type.model.toString() : '',\r\n                        village_figures: this.inputs.village_figures.model,\r\n                        user_id: this.$store.state.User.email,\r\n                        status: 'document_saving'\r\n                    }\r\n                    \r\n                    // upload photos\r\n                    var imageKeyInput = [\"photo_road_access\", \"photo_meeting\", \"photo_dry_land\", \"village_profile\"]\r\n                    for (let index = 0; index < imageKeyInput.length; index++) {\r\n                        let imgKey = imageKeyInput[index]\r\n                        if (this.inputs[imgKey].model) if (this.inputs[imgKey].model.length > 0) {\r\n                            let imgListName = []\r\n                            for (let imgIndex = 0; imgIndex < this.inputs[imgKey].model.length; imgIndex++) {\r\n                                const imgRes = await this.uploadFiles('photo', `Foto ${imgKey} ${imgIndex + 1}`, this.inputs[imgKey].model[imgIndex], 'scooping_visits', 'photos', `${data.village.replace(/\\./g, '_')}-${imgKey.replace(\"photo_\", \"\")}-${imgIndex + 1}`)\r\n                                imgListName.push(imgRes)\r\n                            }\r\n                            data[imgKey] = imgListName.toString()\r\n                        }\r\n                        //  else if (this.inputs[imgKey].preview && !this.inputs[imgKey].preview.includes('noimage')) data[imgKey] = this.inputs[imgKey].preview.replace(this.$store.state.apiUrlImage, \"\")\r\n                    }\r\n                    // upload village_polygon\r\n                    if (this.inputs.village_polygon.model) {\r\n                        data.village_polygon = await this.uploadFiles('polygon', 'Polygon Desa', this.inputs.village_polygon.model, 'scooping_visits', 'village_polygon', `${data.village.replace(/\\./g, '_')}`)\r\n                    } else data.village_polygon = this.raw_data.village_polygon\r\n                    // upload dry_land polygon\r\n                    if (this.inputs.dry_land_polygon.model) {\r\n                        data.dry_land_polygon = await this.uploadFiles('polygon', 'Polygon Lahan Kering Desa', this.inputs.dry_land_polygon.model, 'scooping_visits', 'village_polygon', `${data.village.replace(/\\./g, '_')}-dry_land`)\r\n                    } else data.dry_land_polygon = this.raw_data.dry_land_polygon\r\n                    this.$store.state.loadingOverlayText = 'Saving scoping data...'\r\n                    let url = ''\r\n                    if (this.editId && this.formStatus != 'submit_review') {\r\n                        url = `UpdateScooping?data_no=${this.editId}`\r\n                        if (this.gisInputCheck && this.photosInputCheck) data.status = 'ready_to_submit'\r\n                    }\r\n                    else url = 'AddScooping'\r\n                    const res = await axios.post(this.$store.getters.getApiUrl(url), data, this.$store.state.apiConfig)\r\n                    if (res) {\r\n                        this.$emit('swal', {type: 'success', message: 'Yey! Data berhasil disimpan!'})\r\n                        if (!this.gisInputCheck) {\r\n                            let confirmSendEmail = await Swal.fire({\r\n                                title: 'Bantuan GIS',\r\n                                text: \"Apakah anda ingin mengirim email ke GIS STAFF untuk meminta bantuan pengisian?\",\r\n                                icon: 'warning',\r\n                                showCancelButton: true,\r\n                                confirmButtonColor: '#2e7d32',\r\n                                cancelButtonColor: '#d33',\r\n                                cancelButtonText: 'Tidak Usah',\r\n                                confirmButtonText: 'Ya, Kirim!'\r\n                            })\r\n                            if (confirmSendEmail.isConfirmed) {\r\n                                this.$store.state.loadingOverlay = true\r\n                                this.$store.state.loadingOverlayText = 'Mengirim email ke GIS STAFF...'\r\n                                axios.get(`${this.$store.state.apiUrl.replace('api/', '')}send-mail?data_no=${res.data.data.result}`)\r\n                                setTimeout(() => {\r\n                                    this.$emit('swal', {type: 'success', message: 'Yey! Berhasil mengirim email ke GIS STAFF!'})\r\n                                    this.$store.state.loadingOverlay = false\r\n                                }, 1000);\r\n                            }\r\n                        }\r\n                    }\r\n                    else Swal.fire({\r\n                        title: 'Error!',\r\n                        text: `Data gagal disimpan.`,\r\n                        icon: 'error',\r\n                        confirmButtonColor: '#f44336',\r\n                    })\r\n                }\r\n            } catch (err) {this.errorResponse(err)} finally {\r\n                this.$store.state.loadingOverlay = false\r\n                this.$store.state.loadingOverlayText = 'Loading...'\r\n            }\r\n        },\r\n        separateInputsPerType() {  \r\n            let inputsString = []\r\n            let inputsNumber = []\r\n            let inputsDate = []\r\n            let inputsSelect = []\r\n            let inputsMultiple = []\r\n            let inputsMultipleInput = []\r\n            let inputsFile = []\r\n            for (const [key, value] of Object.entries(this.inputs)) {\r\n                if (value.type == 'String') inputsString.push(key)\r\n                if (value.type == 'Number') inputsNumber.push(key)\r\n                if (value.type == 'Date') inputsDate.push(key)\r\n                if (value.type == 'Select') inputsSelect.push(key)\r\n                if (value.type == 'Multiple') inputsMultiple.push(key)\r\n                if (value.type == 'MultipleInput') inputsMultipleInput.push(key)\r\n                if (value.type == 'File') inputsFile.push(key)\r\n            }\r\n            return {\r\n                string: inputsString,\r\n                number: inputsNumber,\r\n                date: inputsDate,\r\n                select: inputsSelect,\r\n                multiple: inputsMultiple,\r\n                multipleInput: inputsMultipleInput,\r\n                file: inputsFile\r\n            }\r\n        },\r\n        async sendEmailToGIS(data_no) {\r\n            try {\r\n                this.loading.show = true\r\n                this.loading.text = 'Mengirim email...'\r\n                await axios.get(`${this.$store.state.apiUrl.replace('api/', '')}send-mail?data_no=${data_no}`)\r\n            } finally {\r\n                this.emailToGis += 1\r\n                this.$emit('swal', {type: 'success', message: 'Yey! Berhasil mengirim email ke GIS STAFF!'})\r\n                this.loading.show = false\r\n            }\r\n        },\r\n        setUrlFileImage(file) {\r\n            return URL.createObjectURL(file)\r\n        },\r\n        async showedModal(id) {\r\n            try {\r\n                this.loading.show = true\r\n                this.loading.text = 'Menyiapkan form...'\r\n                await this.resetData()\r\n                this.inputs.program_year.model = this.programYear\r\n                this.loading.show = true\r\n                await this.getOptionsData({type: 'province'})\r\n                if (id) {\r\n                    this.loading.show = true\r\n                    this.editId = await JSON.parse(JSON.stringify(id))\r\n                    await this.getData(id)\r\n                } else {\r\n                    this.editId = null\r\n                    // await this.getDummiesData()\r\n                }\r\n            } finally {\r\n                this.loading.show = false\r\n            }\r\n        },\r\n        showFormInputs(section) {\r\n            const user = this.$store.state.User\r\n            // if (user.role_name != 'GIS STAFF' && user.role_group != 'IT' && section.gis_role) return false\r\n            if (user.role_name == 'GIS STAFF' && !section.gis_role) return false\r\n            return true\r\n        },\r\n        showLightbox(imgs, index) {\r\n            if (imgs) this.$store.state.lightbox.imgs = imgs\r\n            \r\n            if (index) this.$store.state.lightbox.index = index\r\n            else this.$store.state.lightbox.index = 0\r\n\r\n            this.$store.state.lightbox.show = true\r\n        },\r\n        async uploadFiles(type, typeName, file, prefix, dir, name) {\r\n            try {\r\n                this.$store.state.loadingOverlayText = `Mengunggah \"${typeName}\"...`\r\n                const url = `${this.$store.state.apiUrlImage}${prefix}/upload.php`\r\n                let fileToUpload = file\r\n                if (type == 'polygon') fileToUpload = file[0]\r\n                const data = this._utils.generateFormData({\r\n                    dir: dir,\r\n                    nama: name,\r\n                    fileToUpload: fileToUpload,\r\n                    type: type\r\n                })\r\n                let responseName = null\r\n                const res = await axios.post(url,data)\r\n                if (res) {\r\n                    responseName = res.data.data.new_name\r\n                    return `${prefix}/${responseName}`\r\n                }\r\n            } catch (err) {this.errorResponse(err)}\r\n        },\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FormModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FormModal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FormModal.vue?vue&type=template&id=6094da5c&\"\nimport script from \"./FormModal.vue?vue&type=script&lang=js&\"\nexport * from \"./FormModal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAutocomplete } from 'vuetify/lib/components/VAutocomplete';\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardActions } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VChip } from 'vuetify/lib/components/VChip';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VDatePicker } from 'vuetify/lib/components/VDatePicker';\nimport { VDialog } from 'vuetify/lib/components/VDialog';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VFileInput } from 'vuetify/lib/components/VFileInput';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VImg } from 'vuetify/lib/components/VImg';\nimport { VMenu } from 'vuetify/lib/components/VMenu';\nimport { VOverlay } from 'vuetify/lib/components/VOverlay';\nimport { VProgressCircular } from 'vuetify/lib/components/VProgressCircular';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\nimport { VTextarea } from 'vuetify/lib/components/VTextarea';\nimport { VTooltip } from 'vuetify/lib/components/VTooltip';\ninstallComponents(component, {VAutocomplete,VBtn,VCard,VCardActions,VCardText,VCardTitle,VChip,VCol,VDatePicker,VDialog,VDivider,VFileInput,VIcon,VImg,VMenu,VOverlay,VProgressCircular,VRow,VTextField,VTextarea,VTooltip})\n"],"sourceRoot":""}